{"version":3,"sources":["serviceWorker.js","App.js","utils/utils.js","axios/axios.js","components/Header/Header.jsx","components/Footer/Footer.jsx","config/menuConfig.js","pages/redux-thunk-demo/actionCreators/actionTypes.js","pages/redux-thunk-demo/actionCreators/getAction.js","components/NavLeft/NavLeft.jsx","Admin.js","pages/home/index.jsx","pages/ui/Buttons.jsx","pages/ui/Modals.jsx","pages/ui/Loadings.jsx","pages/ui/Notification.jsx","pages/ui/Messages.jsx","pages/ui/Tabs.jsx","pages/ui/Gallery.jsx","pages/ui/Carousels.jsx","pages/form/Login.jsx","pages/form/Register.jsx","pages/table/BasicTable.jsx","pages/table/HightTable.jsx","pages/city/city.jsx","pages/order/Order.jsx","pages/order/OrderDetail.jsx","common.js","pages/redux-thunk-demo/reducers/reducer_todo_list.js","pages/redux-thunk-demo/reducers/reducer_title.js","pages/redux-thunk-demo/reducers/reducer_common.js","pages/redux-thunk-demo/store/store.js","pages/redux-thunk-demo/todoListUI.jsx","pages/redux-thunk-demo/redux-thunk-demo.jsx","pages/redux-saga-demo/todoListUI.jsx","pages/redux-saga-demo/actionCreators/actionTypes.js","pages/redux-saga-demo/reducers/reducer_todo_list.js","pages/redux-saga-demo/reducers/reducer_title.js","pages/redux-saga-demo/reducers/reducer_common.js","pages/redux-saga-demo/actionCreators/getAction.js","pages/redux-saga-demo/sagas/todoListSaga.js","pages/redux-saga-demo/store/store.js","pages/redux-saga-demo/redux-saga-demo.jsx","pages/redux-react-todoList/todoListUI.jsx","pages/redux-react-todoList/actionCreators/actionTypes.js","pages/redux-react-todoList/actionCreators/getAction.js","pages/redux-react-todoList/redux-react-todoList.jsx","router.js","pages/redux-react-todoList/reducers/reducer_todo_list.js","pages/redux-react-todoList/reducers/reducer_title.js","pages/redux-react-todoList/reducers/reducer_common.js","pages/redux-react-todoList/store/store.js","index.js"],"names":["Boolean","window","location","hostname","match","App","react_default","a","createElement","this","props","children","Component","utils","filterDate","date","fmt","arguments","length","undefined","Date","o","M+","getMonth","D+","getDate","h+","getHours","H+","m+","getMinutes","s+","getSeconds","q+","Math","floor","S","getMilliseconds","k","test","replace","RegExp","$1","getFullYear","substr","0","1","2","3","4","5","6","getDay","pagination","data","pageOrPageSizeChange","onChange","currentPage","currentPageSize","onShowSizeChange","current","result","page","pageSize","total","totalCount","showTotal","concat","showQuickJumper","showSizeChanger","pageSizeOptions","Axios","options","Promise","resolve","reject","JsonP","url","param","err","res","status","msssage","isShowLoading","document","getElementById","style","display","axios","method","baseURL","tiemout","params","then","response","code","modal_default","info","title","content","msg","Header","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","getWeatherAPIData","jsonp","encodeURIComponent","results","weather_data","setState","objectSpread","city","currentCity","console","log","state","userName","Util","_this2","setInterval","menuType","className","row_default","col_default","span","src","alt","href","dayPictureUrl","weather","temperature","React","connect","titleReducers","Footer","menuList","key","btnList","ACTION_TYPES","TODOLIST_VALUE_CHANGE","TODOLIST_TODO_ITEM_ADD","TODOLIST_TODO_ITEM_DELETE","INIT_ACTION_DATA","INDEX_TITLE","getAction","getInputChangeAction","value","type","getTodoItemAddAction","getTodoItemDeleteAction","index","getIndexTitleAction","initActionData","getInitActionData","callback","dispatch","ajax","list","SubMenu","menu_default","NavLeft","renderTitle","map","item","handleClick","_ref","currentKey","renderMenu","Item","NavLink","to","menuTreeNode","MenuConfig","hash","onClick","selectedKeys","theme","Admin","components_NavLeft_NavLeft","components_Header_Header","Footer_Footer","Home","nextProps","nextState","prevProps","prevState","Buttons","handleCloseLoading","loading","handleChangeSize","e","size","target","card_default","button_default","disabled","icon","shape","marginBottom","Group","icon_default","radio_default","Modals","openBaseModal","visible","defineProperty","handleConfirm","okText","cancelText","onOk","onCancel","visible0","visible1","visible2","visible3","visible4","ModalText","visible4confirmLoading","top","centered","confirmLoading","setTimeout","Loadings","handleChangeLoading","bool","spin_default","indicator","marginLeft","switch_default","checked","alert_default","showIcon","closable","onClose","alert","message","description","spinning","tip","Notification","handleOpen","notification_default","duration","select_default","defaultValue","width","marginRight","val","open","placement","Option","Messages","message_default","Tabpages","newTabIndex","handleTab","handleChangeMode","mode","activeKey","onEdit","targetKey","action","add","panes","push","remove","lastIndex","forEach","pane","i","filter","tabs_default","defaultActiveKey","TabPane","tab","Button","tabPosition","Gallery","openGallery","imgUrl","currentImg","imgList","cover","Meta","gutter","md","height","footer","Carousels","afterChange","currentIndex","beforeChange","from","carousel_default","autoplay","effect","Login","handleSubmit","preventDefault","form","validateFields","values","handleSubmit2","fieldsError","_this$props$form","isFieldTouched","getFieldError","getFieldDecorator","getFieldsError","userNameError","passwordError","form_default","layout","onSubmit","validateStatus","help","rules","required","min","max","pattern","input_default","prefix","color","placeholder","prefx","htmlType","keys","some","field","marginTop","initialValue","valuePropName","checkbox_default","float","form_Login","create","Register","JSON","stringify","success","password","displayRender","label","join","beforeUpload","file","isJPG","error","isLt2M","getBase64","img","reader","FileReader","addEventListener","readAsDataURL","handleChange","originFileObj","imageUrl","userImg","formItemLayout","labelCol","xs","sm","wrapperCol","offsetLayout","offset","uploadButton","assign","input_number_default","id","checkedChildren","unCheckedChildren","moment","date_picker_default","showTime","format","TextArea","autosize","minRows","maxRows","cascader_default","vlaue","expandTrigger","time_picker_default","upload_default","listType","showUploadList","form_Register","BasicTable","onChangeBtn","actionMode","selectedRowKeys","handleDelete","confirm","dataSource","onRowClick","record","selectedItem","onSelectChange","selectedRows","getList","assertThisInitialized","Utils","columns","dataIndex","render","avatar_default","backgroundColor","sex","badge_default","count","role","interest","interestObj","strArr","tooltip_default","slice","isMarried","text","birthday","address","align","_this$state","rowSelection","hasSelected","buttonStyle","table_default","bordered","onRow","FormItem","scrollY","y","scrollX","x","HightTable","handleScollYChange","enable","handleScollXChange","columns1","sorter","b","age","columns2","fixed","scroll","cityIdArr","name","modeArr","opModeArr","authStatusArr","City","search","postData","handleOpenCity","isShowOpenCityModal","openCitySubmit","cityInfo","cityForm","getFieldsValue","_this3","op_mode","arr","user_name","open_time","update_time","city_FilterForm","resetFields","city_OpenCityFormModal","wrappedComponentRef","FilterForm","_this4","reset","city_FormItem","margin","OpenCityFormModal","orderStatusArr","Order","startTime","unix","endTime","finishOrderBtnDisabled","orderDetailBtnDisabled","orderDetail","orderId","finishOrder","getOrderInfo","onFinishOrderSubmit","isShowFinishOrderModal","orderInfo","distance","Order_FilterForm","Order_FormItem","bikeSn","battery","Order_Option","colon","getInfo","regenerator_default","wrap","_context","prev","next","stop","_marked","OrderDetail","getOrderDetailInfo","renderMap","BMap","Map","addMapControl","drawBikeRoute","positionList","drwaServiceArea","area","addControl","ScaleControl","anchor","BMAP_ANCHOR_TOP_RIGHT","NavigationControl","startPoint","endPoint","first","last","Point","lon","lat","startIcon","Icon","Size","imageSize","startMarker","Marker","addOverlay","endIcon","endMarker","trackPoint","polyline","Polyline","strokeColor","strokeWeight","strokeOpacity","centerAndZoom","areaList","polygon","Polygon","fillColor","fillOpacity","orderSn","mobile","startLocation","endLocation","Common","handleState","inputVal","toConsumableArray","splice","defaultState","rootReducers","combineReducers","newState","parse","_ref2","slicedToArray","func","todoListReducers","_ref3","enhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","store","createStore","TodoListUI","handleInputChange","handleBtnAdd","list_default","renderItem","handleItemDelete","Name","subscribe","getState","todoListUI","GET_LIST_DATA","getListData","valueChange","todoListSaga","actionInit","_actionInit","sent","put","t0","todoListSaga_marked","_context2","_marked2","_context3","takeEvery","_marked3","sagaMiddleware","createSagaMiddleware","run","ReduxSagaDemo","redux_saga_demo_todoListUI","ReduxReactTodoList","addItem","_this$props","redux_react_todoList_todoListUI","ERouter","HashRouter","src_App","Switch","Route","path","component","src_common","src_Admin","ReduxThunkDemo","Redirect","ReactDOM","es","router_ERouter","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.aa21f724.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react';\nimport './style/common.less'\n\nclass App extends Component {\n  render() {\n    return (\n        <div>\n           {this.props.children}\n        </div>\n    );\n  }\n}\n\nexport default App;\n","// import React from 'react';\n// import {Button} from 'antd';\nconst filterDate = (date, fmt = 'YYYY-MM-DD HH:mm:ss') => {\n    if (!date) {\n        return '';\n    }\n    if (typeof date === 'number') {\n        date = new Date(date * 1000);\n    }\n    var o = {\n        'M+': date.getMonth() + 1,\n        'D+': date.getDate(),\n        'h+': date.getHours() % 12 === 0 ? 12 : date.getHours() % 12,\n        'H+': date.getHours(),\n        'm+': date.getMinutes(),\n        's+': date.getSeconds(),\n        'q+': Math.floor((date.getMonth() + 3) / 3),\n        'S': date.getMilliseconds()\n    }\n    var week = {\n        '0': '\\u65e5',\n        '1': '\\u4e00',\n        '2': '\\u4e8c',\n        '3': '\\u4e09',\n        '4': '\\u56db',\n        '5': '\\u4e94',\n        '6': '\\u516d'\n    }\n    if (/(Y+)/.test(fmt)) {\n        fmt = fmt.replace(RegExp.$1, (date.getFullYear() + '').substr(4 - RegExp.$1.length))\n    }\n    if (/(E+)/.test(fmt)) {\n        fmt = fmt.replace(RegExp.$1, ((RegExp.$1.length > 1) ? (RegExp.$1.length > 2 ? '\\u661f\\u671f' : '\\u5468') : '') + week[date.getDay() + ''])\n    }\n    for (var k in o) {\n        if (new RegExp('(' + k + ')').test(fmt)) {\n            fmt = fmt.replace(RegExp.$1, (RegExp.$1.length === 1) ? (o[k]) : (('00' + o[k]).substr(('' + o[k]).length)))\n        }\n    }\n    return fmt\n}\n\nconst pagination = (data,pageOrPageSizeChange) =>{\n    return {\n        //这里page和pageSize 的回调是同一个函数处理\n        //page 变化的回调 参数是改变后的页码page及每页条数pageSize\n        onChange:(currentPage,currentPageSize)=>{\n            pageOrPageSizeChange(currentPage,currentPageSize)\n        },\n        //pageSize 变化的回调\n        onShowSizeChange: (currentPage,currentPageSize) => {\n            pageOrPageSizeChange(currentPage,currentPageSize);\n        },\n        // itemRender:(current, type, originalElement)=> {\n        //     console.log(type)\n        //     if (type === 'prev') {\n        //       return (<Button size=\"small\" style={{marginRight:10}}>上一页</Button>);\n        //     } if (type === 'next') {\n        //       return (<Button size=\"small\" style={{marginRight:10}}>下一页</Button>);\n        //     }\n        //     return originalElement;\n        // },\n        current:data.result.page,\n        pageSize:data.result.pageSize,\n        total: data.result.totalCount,\n        showTotal:()=>{\n            return `共${data.result.totalCount}条`\n        },\n        showQuickJumper: true,\n        showSizeChanger: true,//是否可以改变 pageSize\n        pageSizeOptions:['10','20','50','100','200','500','1000']\n    }\n}\n\nexport default {\n    filterDate,\n    pagination\n}","import JsonP from 'jsonp';\nimport axios from 'axios';\nimport { Modal } from 'antd';\n\n\nexport default class Axios {\n    static jsonp(options) {\n        return new Promise((resolve, reject) => {\n            JsonP(options.url, {\n                param: 'callback'\n            }, (err, res) => {\n                if (res.status === 'success') {\n                    resolve(res);\n                } else {\n                    reject(res.msssage);\n                }\n            })\n        })\n    }\n\n    static ajax(options) {\n        let loading;\n        if (options.isShowLoading !==false){\n            loading = document.getElementById('ajaxLoading');\n            loading.style.display = 'block';\n        }\n\n        let baseURL = 'https://www.easy-mock.com/mock/5c83123e23107a1da64ea2fb/api';\n        return new Promise((resolve, reject) => {\n            axios({\n                url: options.url,\n                method: options.method || 'get',\n                baseURL,\n                tiemout: 5000,\n                params: options.params || '',\n\n            }).then((response) => {\n                if (options.isShowLoading !==false) {\n                    loading = document.getElementById('ajaxLoading');\n                    loading.style.display = 'none';\n                }\n                if (response.status === 200){\n                    let res = response.data;\n                    if (res.data.code == 0){\n                        resolve(res.data);\n                    }else{\n                        Modal.info({\n                            title:\"提示\",\n                            content:res.data.msg\n                        })\n                    }\n                }else{\n                    reject(response.data);\n                }\n            })\n        })\n    }\n}","import React from 'react';\nimport { Row, Col} from 'antd'\nimport './header.less'\nimport Util from '../../utils/utils'\nimport axios from '../../axios/axios';\nimport { connect } from 'react-redux'\n\n\n\n\nclass Header extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            userName: '',\n            date: Util.filterDate(new Date()),\n        }\n    }\n    //组件即将挂载-->render函数还未执行\n    componentWillMount() {\n        this.setState({\n            userName:'一定要爱你'\n        })\n        setInterval(() => {\n            this.setState({\n                date: Util.filterDate(new Date())\n            })\n        }, 1000)\n        this.getWeatherAPIData();\n    }\n\n    getWeatherAPIData = () => {\n        let city = \"苍溪\";\n        axios.jsonp({\n            url: `http://api.map.baidu.com/telematics/v3/weather?location=${encodeURIComponent(city)}&output=json&ak=3p49MVra6urFRGOT9s8UBWr2`\n        }).then((res) => {\n            let data = res.results[0].weather_data[0];\n            this.setState({\n                city:res.results[0].currentCity,\n                ...data\n            })\n            console.log(res)\n        })\n    }\n\n    render() {\n        const menuType = this.props.menuType;\n        return (\n            <div className=\"header \">\n                <Row className=\"header-top\">\n                    {\n                        menuType ?\n                            <Col span={6} className=\"logo\">\n                                <img src=\"/assets/img/logo-ant.svg\" alt=\"\" />\n                                <span>heng 通用管理系统</span>\n                            </Col> : ''\n                    }\n                    <Col span={menuType ?18:24}>\n                        <span>欢迎，{this.state.userName}</span>\n                        <a href=\"#\">退出</a>\n                    </Col>\n                </Row>\n                {\n                    menuType ? '' :\n                    <Row className=\"breadcrumb\">\n                        <Col span={4} className=\"breadcrumb-title\">\n                            {this.props.title}\n                        </Col>\n                        <Col span={20} className=\"weather\">\n                            <span className=\"date\">{this.state.date}</span>\n                            <span className=\"weather-city\">\n                                {this.state.city}\n                            </span>\n                            <span className=\"weather-img\">\n                                <img src={this.state.dayPictureUrl} alt=\"\" />\n                            </span>\n                            <span className=\"weather-detail\">\n                                {this.state.weather}{this.state.temperature}\n                            </span>\n                        </Col>\n                    </Row>\n                }\n                    \n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        title: state.titleReducers.title\n    }\n}\n\nexport default connect(mapStateToProps,null)(Header);","import React from 'react';\nimport './footer.less'\nexport default class Footer extends React.Component {\n    render() {\n        return (\n            <div className=\"footer\">\n            一定要爱你（推荐使用谷歌浏览器，可以获得更佳操作页面体验） 技术支持：一定要爱你\n         </div>\n        )\n    }\n}\n","const menuList = [\n    {\n        title: '首页',\n        key: '/home'\n    },\n    {\n        title: 'UI',\n        key: '/ui',\n        children: [\n            {\n                title: '按钮',\n                key: '/ui/buttons',\n            },\n            {\n                title: '弹框',\n                key: '/ui/modals',\n            },\n            {\n                title: 'Loading',\n                key: '/ui/loadings',\n            },\n            {\n                title: '通知提醒',\n                key: '/ui/notification',\n            },\n            {\n                title: '全局Message',\n                key: '/ui/messages',\n            },\n            {\n                title: 'Tab页签',\n                key: '/ui/tabs',\n            },\n            {\n                title: '图片画廊',\n                key: '/ui/gallery',\n            },\n            {\n                title: '轮播图',\n                key: '/ui/carousel',\n            }\n        ]\n    },\n    {\n        title: '表单',\n        key: '/form',\n        children: [\n            {\n                title: '登录',\n                key: '/form/login',\n            },\n            {\n                title: '注册',\n                key: '/form/register',\n            }\n        ]\n    },\n    {\n        title: '表格',\n        key: '/table',\n        children: [\n            {\n                title: '基础表格',\n                key: '/table/basic',\n            },\n            {\n                title: '高级表格',\n                key: '/table/hight',\n            }\n        ]\n    },\n    {\n        title: '富文本',\n        key: '/rich'\n    },\n    {\n        title: '城市管理',\n        key: '/city'\n    },\n    {\n        title: '订单管理',\n        key: '/order',\n        btnList: [\n            {\n                title: '订单详情',\n                key: 'detail'\n            },\n            {\n                title: '结束订单',\n                key: 'finish'\n            }\n        ]\n    },\n    {\n        title: '员工管理',\n        key: '/user'\n    },\n    {\n        title: '车辆地图',\n        key: '/bikeMap'\n    },\n    {\n        title: '图表',\n        key: '/charts',\n        children: [\n            {\n                title: '柱形图',\n                key: '/charts/bar'\n            },\n            {\n                title: '饼图',\n                key: '/charts/pie'\n            },\n            {\n                title: '折线图',\n                key: '/charts/line'\n            },\n        ]\n    },\n    {\n        title: '权限设置',\n        key: '/permission'\n    },\n    {\n        title: 'Redux demo',\n        key: '/redux',\n        children: [\n            {\n                title: 'redux-thunk',\n                key: '/redux/thunk'\n            },\n            {\n                title: 'redux-saga',\n                key: '/redux/saga'\n            },\n            {\n                title: 'react-redux-todolist',\n                key: '/redux/react/todolist',\n            }\n            \n        ]\n    },\n];\nexport default menuList;","//定义Action 类型\n\nconst ACTION_TYPES = {\n    TODOLIST_VALUE_CHANGE:'TODOLIST_VALUE_CHANGE',\n    TODOLIST_TODO_ITEM_ADD:'TODOLIST_TODO_ITEM_ADD',\n    TODOLIST_TODO_ITEM_DELETE: 'TODOLIST_TODO_ITEM_DELETE',\n    INIT_ACTION_DATA: 'INIT_ACTION_DATA',//初始化list\n    \n    \n    INDEX_TITLE:'INDEX_TITLE',//首页标题\n}\n\nexport default ACTION_TYPES;","\n//获取Action\nimport ACTION_TYPES from './actionTypes';\nimport axios from '../../../axios/axios';\n\n\nconst getAction = {\n    getInputChangeAction:((value) => {\n        return {\n            type: ACTION_TYPES.TODOLIST_VALUE_CHANGE,\n            value\n        }\n    }),\n    getTodoItemAddAction: (() => {\n        return {\n            type: ACTION_TYPES.TODOLIST_TODO_ITEM_ADD,\n        }\n    }),\n    getTodoItemDeleteAction: ((index) => {\n        return {\n            type: ACTION_TYPES.TODOLIST_TODO_ITEM_DELETE,\n            index\n        }\n    }),\n    getIndexTitleAction: ((title) => {\n        return {\n            type: ACTION_TYPES.INDEX_TITLE,\n            title\n        }\n    }),\n    initActionData: ((data) => {\n        return {\n            type: ACTION_TYPES.INIT_ACTION_DATA,\n            data\n        }\n    }),\n    getInitActionData: ((callback) => {\n        return (dispatch) => {\n            axios.ajax({\n                url: '/user/list',\n            }).then((res) => {\n                if (res.code === 0) {\n                    dispatch(getAction.initActionData(res.result.list));\n                    callback && callback();\n                }\n            })\n        }\n    })\n\n}\n \n\nexport default getAction;","import React from 'react';\nimport MenuConfig from '../../config/menuConfig';\nimport { Menu } from 'antd';\nimport { NavLink } from 'react-router-dom';\nimport './navLeft.less';\nimport { connect } from 'react-redux'\n\n// import store from '../../pages/redux-thunk-demo/store/store';\nimport getAction from '../../pages/redux-thunk-demo/actionCreators/getAction';\n\n\nconst SubMenu = Menu.SubMenu;\n\n\nclass NavLeft extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            menuList: [],\n            currentKey:'',\n        }\n    }\n\n    //组件即将挂载-->render函数还未执行\n    componentWillMount() {\n        const menuTreeNode = this.renderMenu(MenuConfig);\n        this.setState({\n            menuTreeNode\n        })\n\n    }\n    componentDidMount() {\n        // store.dispatch(getAction.getIndexTitleAction('首页'));\n        // this.props.dispatch();\n        let key = window.location.hash.replace(/#|\\?.*$/g,'');\n        this.setState(()=>{\n            return {\n                currentKey:key\n            }\n        })\n        //每次刷新浏览器就触发一次action\n        this.renderTitle(MenuConfig,key);\n       \n\n    }\n\n    renderTitle = (data,key) => {\n        data.map(item => {\n            if (item.key === key) {\n                this.props.dispatch(getAction.getIndexTitleAction(item.title));\n                return;\n            } \n            if (item.children) {\n                this.renderTitle(item.children,key);\n            } \n        })\n    }\n\n    handleClick = ({item,key})=>{\n        if (key === this.state.currentKey) {\n            return false;\n        }\n        this.setState(()=>{\n            return {\n                currentKey:key\n            }\n        })\n        this.props.dispatch(getAction.getIndexTitleAction(item.props.title));\n    }   \n\n    //菜单渲染\n    renderMenu = (data) => {\n        return data.map((item) => {\n            if (item.children) {\n                return (\n                    <SubMenu title={item.title} key={item.key}>\n                        {this.renderMenu(item.children)}\n                    </SubMenu>\n                )\n            }\n            return <Menu.Item title={item.title} key={item.key}>\n                <NavLink to={item.key}>{item.title}</NavLink>\n            </Menu.Item>\n\n        })\n    }\n\n\n    render() {\n        return (\n            <div>\n                <div className=\"logo\">\n                    <img src=\"/assets/img/logo-ant.svg\" alt=\"\" />\n                    <h1>heng Sys</h1>\n                </div>\n                <Menu \n                    onClick={this.handleClick}\n                    selectedKeys={[this.state.currentKey]}\n                    theme='dark'>\n                    {this.state.menuTreeNode}\n                </Menu>\n            </div>\n        )\n    }\n}\n\nexport default connect()(NavLeft);","import React from 'react';\nimport { Row, Col } from 'antd';\n\nimport Header from './components/Header/Header'\nimport Footer from './components/Footer/Footer'\nimport NavLeft from './components/NavLeft/NavLeft'\nimport { connect } from 'react-redux'\n\nclass Admin extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <Row className=\"container\">\n                    <Col span={3} className=\"nav-left\">\n                    <NavLeft></NavLeft>\n                    </Col>\n                    <Col span={21} className=\"main\">\n                        \n                        <Header></Header>\n                        <Row className=\"content\">\n                            {/* <Home></Home> */}\n                            {this.props.children}\n                        </Row>\n                        <Footer></Footer>\n\n                    </Col>\n                </Row>\n\n            </div>\n        )\n    }\n}\nexport default connect()(Admin)\n\n","import React from 'react';\nimport './index.less'\n\nexport default class Home extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"home-wrap\">\n                高兴地学习React\n            </div>\n        )\n    }\n\n    //组件即将挂载-->render函数还未执行\n    componentWillMount() {\n\n    }\n\n    //组件已经挂载好了-->render函数执行完毕--->用的最多-常用来发起Ajax请求\n    componentDidMount() {\n\n    }\n\n    //props变化了-->接受到了新的props\n    componentWillReceiveProps(nextProps) {\n\n    }\n\n    //props或者state变化了-->接受到了新的props或者state\n    shouldComponentUpdate(nextProps, nextState) {\n        return true;\n    }\n\n    //即将更新-->render函数还未执行\n    componentWillUpdate(nextProps, nextState) {\n\n    }\n\n    //更新完毕-->render函数执行完毕\n    componentDidUpdate(prevProps, prevState) {\n\n    }\n\n    //销毁之前\n    componentWillUnMount() {\n\n    }\n\n\n}\n\n\n","import React from 'react';\nimport { Card,Button,Icon,Radio } from 'antd';\n\n\nimport './ui.less';\n\n\nexport default class Buttons extends React.Component{\n    constructor(){\n        super();\n        this.state={\n            loading:true,\n            size:'default'\n        }\n    }\n    //不显示loading\n    handleCloseLoading = ()=>{\n        this.setState({\n            loading:false\n        })\n    }\n    //大小设置\n    handleChangeSize = (e) => {\n        this.setState({\n            size:e.target.value\n        })\n    }\n    render(){\n        return (\n            <div>\n                <Card title=\"基础按钮\" className=\"card-wrap\">\n                    <Button>default按钮</Button>\n                    <Button type=\"primary\">primary按钮</Button>\n                    <Button type=\"dashed\">dashed按钮</Button>\n                    <Button type=\"danger\">danger按钮</Button>\n                    <Button disabled>disabled按钮</Button>\n                </Card>\n                <Card title=\"图像按钮\" className=\"card-wrap\">\n                    <Button icon=\"plus\">创建</Button>\n                    <Button icon=\"edit\">编辑</Button>\n                    <Button icon=\"delete\">删除</Button>\n                    <Button icon=\"search\" shape=\"circle\"></Button>\n                    <Button icon=\"search\" type=\"primary\">搜索</Button>\n                    <Button icon=\"download\" type=\"primary\">下载</Button>\n                    <Button icon=\"download\" type=\"primary\" shape=\"round\">下载</Button>\n                </Card>\n                <Card title=\"Loading按钮\" className=\"card-wrap\">\n                    <Button loading={this.state.loading}>确定</Button>\n                    <Button loading={this.state.loading}  type=\"primary\" shape=\"circle\"></Button>\n                    <Button loading={this.state.loading}>点击加载</Button>\n                    <Button loading={this.state.loading} shape=\"circle\"></Button>\n                    <Button type=\"primary\" onClick={this.handleCloseLoading}>关闭</Button>\n                </Card>\n                <Card title=\"按钮组\" style={{marginBottom:10}}>\n                    <Button.Group>\n                        <Button type=\"primary\" icon=\"left\">返回</Button>\n                        <Button type=\"primary\">前进<Icon type=\"right\" /></Button>\n                    </Button.Group>\n                </Card>\n\n                <Card title=\"按钮尺寸\" className=\"card-wrap\">\n                    <Radio.Group onChange={this.handleChangeSize} value={this.state.size}>\n                        <Radio value=\"small\">小</Radio>\n                        <Radio value=\"default\">中</Radio>\n                        <Radio value=\"large\">大</Radio>\n                    </Radio.Group>\n                    <Button size={this.state.size}>default按钮</Button>\n                    <Button size={this.state.size} type=\"primary\">primary按钮</Button>\n                    <Button size={this.state.size} type=\"dashed\">dashed按钮</Button>\n                    <Button size={this.state.size} type=\"danger\">danger按钮</Button>\n                    <Button size={this.state.size} disabled>disabled按钮</Button>\n                </Card>\n            </div>\n            \n        );\n    }\n}","import React from 'react';\nimport { Card,Button,Modal } from 'antd';\n\n\nimport './ui.less';\n\n\nexport default class Modals extends React.Component{\n    constructor(){\n        super();\n        this.state={\n            visible0: false,\n            visible1: false,\n            visible2: false,\n            visible3: false,\n            visible4: false,\n            ModalText:\"我是5s自动关闭弹框\",\n            visible4confirmLoading:false,\n        }\n    }\n\n    openBaseModal = (visible) => {\n        this.setState({\n            [visible]:true\n        })        \n    }\n\n    handleConfirm = (type) => {\n        Modal[type]({\n            title: '确定？',\n            content: '您确定进行该操作吗？',\n            okText: '确认',\n            cancelText: '取消',\n            onOk() {\n                console.log('ok')\n            },\n            onCancel() {\n                console.log('cancel')\n            }\n        })\n    }\n    \n    render(){\n        return (\n            <div>\n                <Card title=\"基础模态框\" className=\"card-wrap\">\n                    <Button type=\"primary\" onClick={()=> this.openBaseModal('visible0')}>Open</Button>\n                    <Button type=\"primary\" onClick={()=> this.openBaseModal('visible1')}>自定义页脚</Button>\n                    <Button type=\"primary\" onClick={()=> this.openBaseModal('visible2')}>顶部20px弹框</Button>\n                    <Button type=\"primary\" onClick={() => this.openBaseModal('visible3')}>水平垂直居中</Button>\n                    <Button type=\"primary\" onClick={() => this.openBaseModal('visible4')}>点击确定5s后自动关闭</Button>\n                    \n                    \n                </Card>\n                <Card title=\"信息确认框\" className=\"card-wrap\">\n                    <Button type=\"primary\" onClick={()=>this.handleConfirm('confirm')}>Confirm</Button>\n                    <Button type=\"primary\" onClick={()=>this.handleConfirm('info')}>Info</Button>\n                    <Button type=\"primary\" onClick={()=>this.handleConfirm('success')}>Success</Button>\n                    <Button type=\"primary\" onClick={()=>this.handleConfirm('error')}>Error</Button>\n                    <Button type=\"primary\" onClick={()=>this.handleConfirm('warning')}>Warning</Button>\n                </Card>\n\n                <Modal \n                    title=\"基本弹框\"\n                    visible={this.state.visible0}\n                    onOk={() => {\n                        this.setState({\n                            visible0:false\n                        })\n                    }}\n                    onCancel={() => {\n                        this.setState({\n                            visible0:false\n                        })\n                    }}>\n                    <p>知人者智，自知者明。胜人者有力，自胜者强。——老子</p>\n                </Modal>\n\n                \n                <Modal \n                    title=\"自定义页脚\"\n                    visible={this.state.visible1}\n                    okText=\"确定\"\n                    cancelText=\"取消\"\n                    onOk={() => {\n                        this.setState({\n                            visible1:false\n                        })\n                    }}\n                    onCancel={() => {\n                        this.setState({\n                            visible1:false\n                        })\n                    }}>\n                    <p>设置Modal属性 okText=\"确定\" cancelText=\"取消\"</p>\n                </Modal>\n\n                <Modal \n                    title=\"顶部20px弹框\"\n                    visible={this.state.visible2}\n                    okText=\"ok\"\n                    cancelText=\"cancel\"\n                    style={{top:20}}\n                    onOk={() => {\n                        this.setState({\n                            visible2:false\n                        })\n                    }}\n                    onCancel={() => {\n                        this.setState({\n                            visible2:false\n                        })\n                    }}>\n                    <p>顶部20px弹框 - 给Modal 设置style top:20即可</p>\n                </Modal>\n\n                <Modal \n                    title=\"水平垂直居中\"\n                    visible={this.state.visible3}\n                    okText=\"ok\"\n                    cancelText=\"cancel\"\n                    centered\n                    onOk={() => {\n                        this.setState({\n                            visible3:false\n                        })\n                    }}\n                    onCancel={() => {\n                        this.setState({\n                            visible3:false\n                        })\n                    }}>\n                    <p>水平垂直居中 - 给Modal添加centered属性即可</p>\n                </Modal>\n\n                \n                <Modal \n                    title=\"自动关闭\"\n                    visible={this.state.visible4}\n                    okText=\"确定\"\n                    cancelText=\"取消\"\n                    centered\n                    confirmLoading={this.state.visible4confirmLoading}\n                    onOk={() => {\n                        this.setState({\n                            ModalText: '点击确定5s后自动关闭-在5s之内连续点击按钮是不会多次触发滴',\n                            visible4confirmLoading: true,\n                        });\n\n                        setTimeout(()=>{\n                            this.setState({\n                                visible4:false,\n                                visible4confirmLoading: false,\n                            });\n                        },5000)\n\n                    }}\n                    onCancel={() => {\n                        this.setState({\n                            visible4:false\n                        })\n                    }}>\n                    <p>{this.state.ModalText}</p>\n                </Modal>\n\n            </div>\n            \n        );\n    }\n}","import React from 'react';\nimport { Card,Spin,Radio, Icon,Alert,Switch } from 'antd';\nimport './ui.less';\n\nexport default class Loadings extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            size: 'default',\n            loading:true,\n        }\n    }\n\n    handleChangeSize = (e)=>{\n        this.setState({\n            size:e.target.value\n        })\n    }\n\n    handleChangeLoading = (bool) => {\n        this.setState({\n            loading:bool\n        })\n    }\n\n    render() {\n        const icon = <Icon type=\"loading\"></Icon>\n        return (\n            <div>\n               \n                <Card title=\"spin用法\" className=\"card-wrap\">\n                    <Radio.Group value={this.state.size} onChange={this.handleChangeSize}>\n                        <Radio value=\"small\">小</Radio>\n                        <Radio value=\"default\">中</Radio>\n                        <Radio value=\"large\">大</Radio>\n                    </Radio.Group>\n                    <Spin size={this.state.size}></Spin>\n                    <Spin size={this.state.size} indicator={icon} style={{ marginLeft: 20 }}></Spin>\n                </Card>\n\n                <Card title=\"内容遮罩Spin + Alert\" className=\"card-wrap\">\n                   \n                    <div style={{marginBottom:20}}>\n                        Loading state: <Switch checked={this.state.loading} onChange={this.handleChangeLoading}/>\n                    </div>\n                    <Alert\n                        showIcon\n                        closable\n                        onClose={() => {\n                            alert('点击了关闭');\n                        }}\n                        message=\"Alert type='success'\"\n                        description=\"命名使用英文语义化，禁止使用特殊字符，禁止使用拼音，禁止使用中英文混合！\"\n                        type=\"success\"\n                        style={{marginBottom:20}}\n                    />\n                    \n                    <Spin size={this.state.size} spinning={this.state.loading}>\n                        <Alert\n                            message=\"Alert type='info'\"\n                            description=\"项目、目录、html/css/js等文件命名全部采用小写方式， 以下划线分隔。eg：my_project_name\"\n                            type=\"info\"\n                            style={{marginBottom:20}}\n                        />\n                    </Spin>\n\n                    <Spin size={this.state.size} tip=\"加载中...\" spinning={this.state.loading}>\n                        <Alert\n                            message=\"Alert type='warning' Spin tip='加载中...' \"\n                            description=\"html/css/js文件名一一对应参考微信小程序.eg: login.html、login.css、login.js\"\n                            type=\"warning\"\n                            style={{marginBottom:20}}\n                        />\n                    </Spin>\n\n                    <Spin size={this.state.size} indicator={icon} spinning={this.state.loading}>\n                        <Alert\n                            message=\"Alert type='error' indicator='<Icon type='loading'></Icon>' \"\n                            description=\"class、图片、视频、音频采用小写方式，以下划线或中划线分隔；eg：btn-play或btn_play\"\n                            type=\"error\"\n                        />\n                    </Spin>\n\n                </Card>\n\n            </div>\n        )\n    }\n\n    \n\n\n}\n\n\n","import React from 'react';\nimport { Card,Button,notification,Select } from 'antd';\nimport './ui.less';\n\nexport default class Notification extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            size: 'default',\n            loading:true,\n        }\n    }\n\n    handleOpen = (type) => {\n        notification[type]({\n            message: '我是通知消息的title',\n            description: '我是通知消息的desc',\n            duration:3,//3s自动关闭 默认4.5s，设置为null不关闭\n            \n        })\n    }\n\n    \n\n    render() {\n        const options = ['topLeft', 'topRight', 'bottomLeft', 'bottomRight'];\n\n        return (\n            <div>\n                <Card title=\"通知提醒框\" className=\"card-wrap\">\n                    <Button type=\"primary\" onClick={()=>this.handleOpen('success')}>Success</Button>\n                    <Button type=\"primary\" onClick={()=>this.handleOpen('info')}>Info</Button>\n                    <Button type=\"primary\" onClick={()=>this.handleOpen('warning')}>Warning</Button>\n                    <Button type=\"primary\" onClick={()=>this.handleOpen('error')}>Error</Button>\n                </Card>\n                <Card title=\"通知提醒框-方向控制\" className=\"card-wrap\">\n                    <Select\n                        defaultValue=\"topRight\"\n                        style={{ width: 140, marginRight: 10 }}\n                        onChange={(val) => {\n                            notification.open({\n                                type:'info',\n                                message:`我是${val} title`,\n                                description: '这里是好长好长的描述',\n                                placement: val,//方向\n                            });\n                        }}\n                    >\n                        {options.map(val => \n                            <Select.Option key={val} value={val}>\n                                {val}\n                            </Select.Option>\n                        )}\n                    </Select>\n                </Card>\n            </div>\n        )\n    }\n\n    \n\n\n}\n\n\n","import React from 'react';\nimport { Card, Button, message } from 'antd';\nimport './ui.less';\n\nexport default class Messages extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        }\n    }\n\n    /**\n     * 第一个参数，提示内容\n     * 第二个参数，自动关闭的延时，单位秒。设为 0 时不自动关闭。\n     * 第三个参数，关闭时触发的回调函数\n     * 详情：https://ant.design/components/message-cn/#components-message-demo-duration\n     */\n    handleOpen = (type)=>{\n        message[type]('我是全局Message提示内容',2,()=>{\n            alert('2s -->close')\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <Card title=\"全局提示框\" className=\"card-wrap\">\n                    <Button type=\"primary\" onClick={()=>this.handleOpen('success')}>Success</Button>\n                    <Button type=\"primary\" onClick={()=>this.handleOpen('info')}>Info</Button>\n                    <Button type=\"primary\" onClick={()=>this.handleOpen('warning')}>Warning</Button>\n                    <Button type=\"primary\" onClick={()=>this.handleOpen('error')}>Error</Button>\n                    <Button type=\"primary\" onClick={()=>this.handleOpen('loading')}>Loading</Button>\n                </Card>\n            </div>\n        )\n    }\n\n    \n\n\n}\n\n\n","import React from 'react';\nimport { Card,Tabs,message,Icon,Radio } from 'antd';\nimport './ui.less';\n\nexport default class Tabpages extends React.Component {\n\n    newTabIndex = 0;\n    constructor(props) {\n        super(props);\n        const panes = [\n            { title: 'Tab 1', content: 'Content of Tab 1', key: '1' },\n            { title: 'Tab 2', content: 'Content of Tab 2', key: '2' },\n            { title: 'Tab 3', content: 'Content of Tab 3', key: '3', closable: false},\n          ];\n        this.state = {\n            mode: 'top',\n            size: 'default',\n            activeKey: panes[0].key,\n            panes,\n        }\n    }\n\n    handleTab = (key) => {\n        message.info('选择了Tab'+key, 3);\n    }\n\n    handleChangeMode = (e) => {\n        this.setState({\n            mode:e.target.value\n        })\n    }\n\n    handleChangeSize = (e) => {\n        this.setState({\n            size:e.target.value\n        })\n    }\n\n    onChange = (activeKey) => {\n        this.setState({\n            activeKey\n        })\n    }\n\n    onEdit = (targetKey,action) => {\n        // console.log(action);\n        // console.log(targetKey);\n        //action= 'remove' | 'add'\n        this[action](targetKey);\n    }\n\n    add = () => {\n        const panes = this.state.panes;\n        const activeKey = `newTab${this.newTabIndex++}`;\n        panes.push({ title: activeKey, content: `New Tab Pane${activeKey}`, key: activeKey });\n        this.setState({ panes, activeKey });\n    }\n\n    remove = (targetKey) => {\n        console.log(targetKey)\n        console.log(this.state.activeKey)\n        let activeKey = this.state.activeKey;\n        let lastIndex;\n        this.state.panes.forEach((pane, i) => {\n            if (pane.key === targetKey) {\n                lastIndex = i - 1;\n            }\n        });\n        const panes = this.state.panes.filter(pane => pane.key !== targetKey);\n        if (lastIndex >= 0 && activeKey === targetKey) {\n            activeKey = panes[lastIndex].key;\n        }\n        this.setState({ panes, activeKey });\n    }\n    \n    \n\n    render() {\n        return (\n            <div>\n                <Card title=\"Tab页签\" className=\"card-wrap\">\n                    <Tabs defaultActiveKey=\"1\" onChange={this.handleTab}>\n                        <Tabs.TabPane tab=\"首页\" key=\"1\">\n                            我是首页内容。。。\n                        </Tabs.TabPane>\n                        <Tabs.TabPane tab=\"财富\" key=\"2\">\n                            我是财富内容。。。\n                        </Tabs.TabPane>\n                        <Tabs.TabPane tab=\"出境\" key=\"3\" disabled>\n                            我是出境内容。。。\n                        </Tabs.TabPane>\n                        <Tabs.TabPane tab=\"朋友\" key=\"4\">\n                            我是朋友内容。。。\n                        </Tabs.TabPane>\n                        <Tabs.TabPane tab=\"我的\" key=\"5\">\n                            我是我的内容。。。\n                        </Tabs.TabPane>\n                    </Tabs>\n                </Card>\n\n                <Card title=\"Tab带图标页签\" className=\"card-wrap\">\n                    <Tabs defaultActiveKey=\"1\" onChange={this.handleTab}>\n                        <Tabs.TabPane tab={<span><Icon type=\"android\"/>android</span>} key=\"1\">\n                            我是android内容。。。\n                        </Tabs.TabPane>\n                        <Tabs.TabPane tab={<span><Icon type=\"apple\"/>apple</span>} key=\"2\">\n                            我是apple内容。。。\n                        </Tabs.TabPane>\n                    </Tabs>\n                </Card>\n\n\n                <Card title=\"Tab方向/大小控制\" className=\"card-wrap\">\n                    <Radio.Group value={this.state.mode} onChange={this.handleChangeMode} style={{marginBottom:20}}>\n                        <Radio.Button value=\"top\">top</Radio.Button>\n                        <Radio.Button value=\"left\">left</Radio.Button>\n                        <Radio.Button value=\"bottom\">bottom</Radio.Button>\n                        <Radio.Button value=\"right\">right</Radio.Button>\n                    </Radio.Group>\n\n                    <Radio.Group value={this.state.size} onChange={this.handleChangeSize} style={{marginBottom:20,marginLeft:20}}>\n                        <Radio.Button value=\"small\">小</Radio.Button>\n                        <Radio.Button value=\"default\">中</Radio.Button>\n                        <Radio.Button value=\"large\">大</Radio.Button>\n                    </Radio.Group>\n\n                    <Tabs\n                        defaultActiveKey=\"1\"\n                        onChange={this.handleTab}\n                        tabPosition={this.state.mode}\n                        size={this.state.size}\n                    >\n                        <Tabs.TabPane tab={<span><Icon type=\"android\"/>android</span>} key=\"1\">\n                            我是android内容。。。\n                        </Tabs.TabPane>\n                        <Tabs.TabPane tab={<span><Icon type=\"apple\"/>apple</span>} key=\"2\">\n                            我是apple内容。。。\n                        </Tabs.TabPane>\n                        <Tabs.TabPane tab={<span><Icon type=\"windows\"/>windows</span>} key=\"3\">\n                            我是windows内容。。。\n                        </Tabs.TabPane>\n                        <Tabs.TabPane tab={<span><Icon type=\"ie\"/>ie</span>} key=\"4\">\n                            我是ie内容。。。\n                        </Tabs.TabPane>\n                        <Tabs.TabPane tab={<span><Icon type=\"chrome\"/>chrome</span>} key=\"5\">\n                            我是chrome内容。。。\n                        </Tabs.TabPane>\n                        <Tabs.TabPane tab={<span><Icon type=\"github\"/>github</span>} key=\"6\">\n                            我是github内容。。。\n                        </Tabs.TabPane>\n                        <Tabs.TabPane tab={<span><Icon type=\"weibo\"/>weibo</span>} key=\"7\">\n                            我是weibo内容。。。\n                        </Tabs.TabPane>\n                        <Tabs.TabPane tab={<span><Icon type=\"html5\"/>html5</span>} key=\"8\">\n                            我是html5内容。。。\n                        </Tabs.TabPane>\n                        <Tabs.TabPane tab={<span><Icon type=\"qq\"/>qq</span>} key=\"9\">\n                            我是qq内容。。。\n                        </Tabs.TabPane>\n                        <Tabs.TabPane tab={<span><Icon type=\"alipay\"/>alipay</span>} key=\"10\">\n                            我是alipay内容。。。\n                        </Tabs.TabPane>\n                        <Tabs.TabPane tab={<span><Icon type=\"google\"/>google</span>} key=\"11\">\n                            我是google内容。。。\n                        </Tabs.TabPane>\n                        <Tabs.TabPane tab={<span><Icon type=\"taobao\"/>taobao</span>} key=\"12\">\n                            我是taobao内容。。。\n                        </Tabs.TabPane>\n                    </Tabs>\n                </Card>\n\n                <Card title=\"可添加/删除\" className=\"card-wrap\">\n                    <Tabs\n                        activeKey={this.state.activeKey}\n                        type=\"editable-card\"\n                        onChange={this.onChange}\n                        onEdit={this.onEdit}\n                    >\n                        \n                        {this.state.panes.map(pane =>\n                            <Tabs.TabPane tab={pane.title} closable={pane.closable} key={pane.key}>{pane.content}</Tabs.TabPane>\n                        )}\n                    </Tabs>\n                </Card>\n\n            </div>\n        )\n    }\n\n    \n\n\n}\n\n\n","import React from 'react';\nimport { Row,Col,Card,Modal } from 'antd';\n\nexport default class Gallery extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            visible: false,\n            currentImg:''\n        }\n    }\n\n    openGallery = (imgUrl) => {\n        this.setState({\n            visible: true,\n            currentImg:'/assets/img/gallery/'+imgUrl\n        })\n    }\n\n    render() {\n        const imgs = [\n            ['1.png', '2.png', '3.png', '4.png', '5.png'],\n            ['6.png', '7.png', '8.png', '9.png', '10.png'],\n            ['11.png', '12.png', '13.png', '14.png', '15.png'],\n            ['16.png', '17.png', '18.png', '19.png', '20.png'],\n            ['21.png', '22.png', '23.png', '24.png', '25.png']\n        ]\n        const imgList = imgs.map((list)=>\n            list.map(item=>\n                <Card\n                    key={item}\n                    style={{ marginBottom: 10 }}\n                    cover={<img alt={item} src={'/assets/img/gallery/' + item} />}\n                    onClick={()=>this.openGallery(item)}\n                   \n                >\n                <Card.Meta\n                    title=\"React antd gallery画廊\"\n                    description=\"www.google.com\"\n                    />\n                </Card>\n            )\n        );\n        return (\n            <div className=\"card-warp\">\n                <Row gutter={10}>\n                    {\n                        imgList.map((item,index) =>\n                            <Col key={index} md={index === imgList.length-1?4:5}>{item}</Col>\n                        )\n                    }\n                    {/* <Col md={5}></Col>\n                    <Col md={5}></Col>\n                    <Col md={5}></Col>\n                    <Col md={4}></Col> */}\n                </Row>\n\n                <Modal\n                    width={300}\n                    height={500}\n                    title=\"图片画廊\"\n                    visible={this.state.visible}\n                    footer={null}\n                    onCancel={() => {\n                        this.setState({\n                            visible:false\n                        })\n                    }}\n\n                >\n                    {<img src={this.state.currentImg} alt=\"\" style={{width:'100%'}}/>}\n                </Modal>\n            </div>\n        )\n    }\n\n    \n\n\n}\n\n\n","import React from 'react';\n\nimport { Card,Carousel} from 'antd';\n\nexport default class Carousels extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n\n        }\n    }\n\n    afterChange = (currentIndex)=>{\n        console.log('afterChange--currentIndex->',currentIndex)\n    }\n\n    beforeChange = (from,to) => {\n        console.log('beforeChange--from->',from)\n        console.log('beforeChange--to->',to)\n        \n    }\n\n    render() {\n        return (\n            <div>\n                <Card title=\"文字背景轮播\">\n                    <Carousel autoplay effect=\"fade\">\n                        <div><h3>Ant Motion Banner - React</h3></div>\n                        <div><h3>Ant Motion Banner - Vue</h3></div>\n                        <div><h3>Ant Motion Banner - Angular</h3></div>\n                    </Carousel>\n                </Card>\n\n                <Card title=\"图片轮播\" className=\"slider-wrap\">\n                    <Carousel autoplay afterChange={this.afterChange} beforeChange={this.beforeChange}>\n                        <div><img src=\"/assets/img/carousel-img/carousel-1.jpg\" alt=\"\"/></div>\n                        <div><img src=\"/assets/img/carousel-img/carousel-2.jpg\" alt=\"\"/></div>\n                        <div><img src=\"/assets/img/carousel-img/carousel-3.jpg\" alt=\"\"/></div>\n                    </Carousel>\n                </Card>\n            </div>\n        )\n    }\n\n    \n\n\n}\n\n\n","import React from 'react';\n\nimport { Card,Form,Icon,Input,Button, Checkbox } from 'antd';\n\n\n\nfunction hasErrors(fieldsError) {\n    return Object.keys(fieldsError).some(field => fieldsError[field]);\n}\n\n  \n\nclass Login extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n\n        }\n    }\n\n    componentDidMount() {\n        this.props.form.validateFields();\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                console.log(values)\n            }\n        })\n    }\n\n    handleSubmit2 = (e) => {\n        e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                console.log(values)\n            }\n        })\n    }\n    \n\n   \n    render() {\n        // console.log(this.props.form);\n        const { isFieldTouched, getFieldError,getFieldDecorator,getFieldsError } = this.props.form;\n        const userNameError = isFieldTouched('userName') && getFieldError('userName');\n        const passwordError = isFieldTouched('password') && getFieldError('password');\n\n        return (\n            <div>\n                <Card title=\"登录行内表单\">\n                    <Form layout=\"inline\" onSubmit={this.handleSubmit}>\n                        <Form.Item\n                            validateStatus={userNameError ? \"error\" : \"\"}\n                            help={userNameError || \"\"}\n                        >\n                            {\n                                getFieldDecorator('userName', {\n                                    rules: [\n                                        {\n                                            required:true,\n                                            message:'用户名不能为空'\n                                        },\n                                        {\n                                            min:5,max:10,\n                                            message:'用户名长度在5-10位'\n                                        },\n                                        {\n                                            pattern:new RegExp('^\\\\w+$','g'),\n                                            message:'用户名必须为字母或者数字'\n                                        }\n                                    ]\n                                })(\n                                    <Input prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }}/>} placeholder=\"请输入用户名\"/>\n                                )\n                            }\n                        </Form.Item>\n                        <Form.Item\n                            validateStatus={passwordError ? \"error\" : ''}\n                            help={passwordError || ''}\n                        >\n                            {\n                                getFieldDecorator('password',{\n                                    rules:[\n                                        {\n                                            required:true,\n                                            message:'密码不能为空'\n                                        },\n                                        // {\n                                        //     min:6,max:20,\n                                        //     message:'密码长度在6-20位'\n                                        // },\n                                        {\n                                            pattern:new RegExp(/^[A-Za-z0-9~`!@#$%^&*()_+-='\",;.?/|]{6,20}$/,'g'),\n                                            message:'6-20位密码(包含字母、数字和下划线)'\n                                        }\n                                    ]\n                                })(\n                                    <Input prefx={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }}/>} placeholder=\"请输入密码\"/>\n                                )\n                            }\n                        </Form.Item>\n                        <Form.Item>\n                            <Button type=\"primary\" htmlType=\"submit\" disabled={hasErrors(getFieldsError())}>登录</Button>\n                        </Form.Item>\n                    </Form>\n                </Card>\n            \n            \n                <Card title=\"登录水平表单\" style={{marginTop:20}}>\n                    <Form style={{width:300}}>\n                        <Form.Item>\n                            {\n                                getFieldDecorator('userName',{\n                                    initialValue:'',\n                                    rules:[\n                                        {\n                                            required:true,\n                                            message:'用户名不能为空'\n                                        },\n                                        {\n                                            min:5,max:10,\n                                            message:'用户名长度在5-10位'\n                                        },\n                                        {\n                                            pattern:new RegExp('^\\\\w+$','g'),\n                                            message:'用户名必须为字母或者数字'\n                                        }\n                                    ]\n                                })(\n                                    <Input prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }}/>} placeholder=\"请输入用户名\"/>\n                                )\n                            }\n                        </Form.Item>\n                        <Form.Item>\n                            {\n                                getFieldDecorator('password', {\n                                    initialValue: '',\n                                    rules: []\n                                })(\n                                    <Input prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }}/>} placeholder=\"请输入密码\"/>\n                                )\n                            }\n                        </Form.Item>\n                        <Form.Item>\n                            {\n                                getFieldDecorator('remember', {\n                                    initialValue: true,\n                                    valuePropName:'checked'\n                                })(\n                                    <Checkbox>记住密码</Checkbox>\n                                )\n                            }\n                            <a href=\"#\" style={{float:'right'}}>忘记密码</a>\n                        </Form.Item>\n                        <Form.Item>\n                            <Button onClick={this.handleSubmit2} type=\"primary\" htmlType=\"submit\" style={{width:'100%'}}>登录</Button>\n                        </Form.Item>\n                    </Form>\n                </Card>\n            </div>\n        )\n    }\n\n}\n\nexport default Form.create()(Login);\n\n\n","import React from 'react';\nimport { Card, Form, Input, Button, Icon, message, Radio, InputNumber, Select, Switch, DatePicker, TimePicker, Cascader, Upload, Checkbox } from 'antd';\nimport moment from 'moment';\n\nclass Register extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            userImg: '',//头像\n            loading:false,\n        }\n    }\n\n\n\n    handleSubmit = () => {\n        // let values = this.props.form.getFieldsValue();\n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                console.log(JSON.stringify(values,null,2));\n                message.success(`恭喜${values.userName}注册成功，密码：${values.password}`)\n            }\n        })\n    }\n\n    //地址选择返回的自定义格式\n    displayRender = (label) => {\n        console.log(label)\n        return label.join('-');\n    }\n\n    //头像上传之前 可做一些对图片的要求\n    beforeUpload = (file)=>{\n        const isJPG = file.type === 'image/jpeg';\n        if (!isJPG) {\n            message.error('上传的图片必须是jpg格式');\n        }\n\n        const isLt2M = file.size / 1024 / 1024 < 2;\n        if (!isLt2M) {\n            message.error('上传的图片必须小于2MB!');\n        }\n        return isJPG && isLt2M;\n    }\n\n    getBase64 = (img,callback) => {\n        const reader = new FileReader();\n        reader.addEventListener('load', () => callback(reader.result));\n        reader.readAsDataURL(img);\n    }\n\n    handleChange = (info) => {\n        if (info.file.status === 'uploading') {\n            this.setState({ loading: true });\n            return;\n        }\n        if (info.file.status === 'done') {\n            // Get this url from response in real world.\n            this.getBase64(info.file.originFileObj, imageUrl => this.setState({\n                userImg:imageUrl,\n                loading: false,\n            }));\n        }\n    }\n\n    render() {\n        const { getFieldDecorator } = this.props.form;\n\n        const formItemLayout = {\n            labelCol: {\n                xs: 24,\n                sm: 3\n            },\n            wrapperCol: {\n                xs: 24,\n                sm: 12\n            }\n        }\n        const offsetLayout = {\n            wrapperCol: {\n                xs: {\n                    span: 24\n                },\n                sm: {\n                    span: 12,\n                    offset: 3\n                }\n            }\n        }\n        const roleSelectList = [\n            { id: 1, value: '皇帝' },\n            { id: 2, value: '大臣' },\n            { id: 3, value: '宰相' },\n            { id: 4, value: '将军' },\n            { id: 5, value: '臣子' }\n        ]\n        const interestSelectList = [\n            { id: 1, value: '写代码' },\n            { id: 2, value: '撩妹子' },\n            { id: 3, value: '打篮球' },\n            { id: 4, value: '泡网吧' },\n            { id: 5, value: 'K歌' }\n        ]\n        const options = [\n            {\n                value: '四川省',//获取的值\n                label: '四川省',//显示的值\n                children: [\n                    {\n                        value: '成都市',\n                        label: '成都市',\n                        children: [\n                            {\n                                value: '高新区',\n                                label: '高新区',\n                            },\n                            {\n                                value: '武侯区',\n                                label: '武侯区',\n                            },\n                            {\n                                value: '青羊区',\n                                label: '青羊区',\n                            },\n                            {\n                                value: '锦江区',\n                                label: '锦江区',\n                            }\n                        ]\n                    },\n                    {\n                        value: '绵阳市',\n                        label: '绵阳市',\n                        children: [\n                            {\n                                value: '涪城区',\n                                label: '涪城区',\n                            },\n                            {\n                                value: '三台县',\n                                label: '三台县',\n                            },\n                            {\n                                value: '江油市',\n                                label: '江油市',\n                            },\n                            {\n                                value: '游仙区',\n                                label: '游仙区',\n                            }\n\n                        ]\n                    }\n                ]\n            },\n            {\n                value: '广东省',\n                label: '广东省',\n                children: [\n                    {\n                        value: '广州市',\n                        label: '广州市',\n                        children: [\n                            {\n                                vlaue:'天河区',\n                                label:'天河区',\n                            },\n                            {\n                                vlaue:'白云区',\n                                label:'白云区',\n                            },\n                            {\n                                vlaue:'海珠区',\n                                label:'海珠区',\n                            }\n                       \n                        ]\n                    },\n                    {\n                        value: '中山市',\n                        label: '中山市',\n                    },\n                    {\n                        value: '珠海市',\n                        label: '珠海市',\n                    },\n                    {\n                        value: '江门市',\n                        label: '江门市',\n                    }\n                ]\n            }\n        ]\n\n        const uploadButton = (\n            <div>\n                <Icon type={this.state.loading ? 'loading' : 'plus'} />\n                <div className=\"ant-upload-text\">上传</div>\n            </div>\n        );\n        return (\n            <div>\n                <Card title=\"注册表单\">\n                    <Form layout=\"horizontal\">\n                        <Form.Item label=\"用户名\" {...formItemLayout}>\n                            {\n                                getFieldDecorator('userName', {\n                                    initialValue: '',\n                                    rules: [\n                                        {\n                                            required: true,\n                                            message: '用户名不能为空'\n                                        },\n                                        {\n                                            min: 5, max: 12,\n                                            message: '用户名长度5-12'\n                                        }, {\n                                            pattern: new RegExp('^\\\\w+$', 'g'),\n                                            message: '用户名必须是字母或者数字'\n                                        }\n                                    ]\n                                })(\n                                    <Input prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"请输入用户名\" />\n                                )\n                            }\n\n                        </Form.Item>\n\n                        <Form.Item label=\"密码\" {...formItemLayout}>\n                            {\n                                getFieldDecorator('password', {\n                                    initialValue: '',\n                                    rules: [\n                                        {\n                                            required: true,\n                                            message: '密码不能为空'\n                                        },\n                                        {\n                                            pattern: new RegExp(/^[A-Za-z0-9~`!@#$%^&*()_+-='\",;.?/|]{6,20}$/, 'g'),\n                                            message: '密码必须是6-20位(包含字母、数字和下划线、特殊字符)'\n                                        }\n                                    ]\n                                })(\n                                    <Input type=\"password\" prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"请输入密码\" />\n                                )\n                            }\n\n                        </Form.Item>\n\n                        <Form.Item label=\"性别\" {...formItemLayout}>\n                            {\n                                getFieldDecorator('sex', {\n                                    initialValue: 1,\n                                })(\n                                    <Radio.Group>\n                                        <Radio value={1}>男</Radio>\n                                        <Radio value={2}>女</Radio>\n                                    </Radio.Group>\n                                )\n                            }\n                        </Form.Item>\n\n                        <Form.Item label=\"年龄\" {...formItemLayout}>\n                            {\n                                getFieldDecorator('age', {\n                                    initialValue: 23,\n                                })(\n                                    <InputNumber min={18} max={60} />\n                                )\n                            }\n                        </Form.Item>\n\n                        <Form.Item label=\"角色选择\" {...formItemLayout}>\n                            {\n                                getFieldDecorator('role', {\n                                    initialValue: 3,\n                                })(\n                                    <Select>\n                                        {\n                                            roleSelectList.map((item, index) => {\n                                                return (\n                                                    <Select.Option key={item.id} value={item.id}>{item.value}</Select.Option>\n                                                )\n                                            })\n                                        }\n\n                                    </Select>\n                                )\n                            }\n                        </Form.Item>\n\n                        <Form.Item label=\"爱好选择\" {...formItemLayout}>\n                            {\n                                getFieldDecorator('interest', {\n                                    initialValue: [2, 3, 4],\n                                })(\n                                    <Select mode=\"multiple\" placeholder=\"可多选爱好\">\n                                        {\n                                            interestSelectList.map((item, index) => {\n                                                return (\n                                                    <Select.Option key={item.id} value={item.id}>{item.value}</Select.Option>\n                                                )\n                                            })\n                                        }\n\n                                    </Select>\n                                )\n                            }\n                        </Form.Item>\n\n                        <Form.Item label=\"是否婚配\" {...formItemLayout}>\n                            {\n                                getFieldDecorator('isMarried', {\n                                    initialValue: false,\n                                })(\n                                    <Switch checkedChildren=\"是\" unCheckedChildren=\"否\" />\n                                )\n                            }\n                        </Form.Item>\n\n                        <Form.Item label=\"生日\" {...formItemLayout}>\n                            {\n                                getFieldDecorator('birthday', {\n                                    initialValue: moment('1993-06-06'),\n                                })(\n                                    <DatePicker showTime format=\"YYYY-MM-DD HH:mm:ss\" />\n                                )\n                            }\n                        </Form.Item>\n\n\n                        <Form.Item label=\"填写联系地址\" {...formItemLayout}>\n                            {\n                                getFieldDecorator('address', {\n                                    initialValue: '四川省成都市高新区',\n                                })(\n                                    <Input.TextArea autosize={{\n                                        minRows: 4, maxRows: 6\n                                    }}></Input.TextArea>\n                                )\n                            }\n                        </Form.Item>\n\n                        <Form.Item label=\"选择联系地址\" {...formItemLayout}>\n                            {\n                                getFieldDecorator('addressSelect', {\n                                    initialValue: ['四川省','成都市','高新区'],\n                                })(\n                                    <Cascader\n                                        options={options}\n                                        expandTrigger=\"hover\"\n                                        displayRender={this.displayRender}\n                                    />\n                                )\n                            }\n                        </Form.Item>\n\n                        <Form.Item label=\"早起时间\" {...formItemLayout}>\n                            {\n                                getFieldDecorator('time', {\n                                    initialValue: moment('08-10-00',\"HH:mm:ss\"),\n                                })(\n                                    <TimePicker />\n                                )\n                            }\n                        </Form.Item>\n\n                        <Form.Item label=\"头像\" {...formItemLayout}>\n                            {\n                                getFieldDecorator('userImg', {\n                                    rules: [\n                                        {\n                                            required: true,\n                                            message:'请上传头像'\n                                        }\n                                    ]\n                                })(\n                                    <Upload\n                                        listType=\"picture-card\"\n                                        showUploadList={false}\n                                        action=\"//jsonplaceholder.typicode.com/posts/\"\n                                        beforeUpload={this.beforeUpload}\n                                        onChange={this.handleChange}\n                                    >\n                                    {this.state.userImg?<img src={this.state.userImg} alt=\"头像\"/>:uploadButton}\n                                    </Upload>\n                                )\n                            }\n                        </Form.Item>\n\n\n\n                        <Form.Item {...offsetLayout}>\n                            {\n                                getFieldDecorator('isAgree', {\n                                    initialValue: true,\n                                    valuePropName:'checked'\n                                })(\n                                    <Checkbox>我已阅读过<a>注册协议</a> </Checkbox>\n                                )\n                            }\n                        </Form.Item>\n\n\n\n                        <Form.Item {...offsetLayout}>\n                            <Button type=\"primary\" htmlType=\"submit\" onClick={this.handleSubmit}>注册</Button>\n                        </Form.Item>\n\n                    </Form>\n                </Card>\n            </div>\n        )\n    }\n}\n\nexport default Form.create()(Register);\n\n","import React from 'react';\nimport { Card, Table, Avatar,Badge,Tooltip, Button,Radio,Modal,notification }from 'antd';\nimport moment from 'moment';\nimport axios from './../../axios/axios';\nimport Utils from './../../utils/utils';\n\nexport default class BasicTable extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            dataSource: [],\n            selectedRowKeys: [],\n            loading: false,\n            actionMode: 'radio',\n        }\n    }\n\n    params = {\n        page: 1,\n        pageSize:10\n    }\n\n    onChangeBtn = (e)=>{\n        this.setState({\n            actionMode: e.target.value,\n            selectedRowKeys: [],//单选和多选切换时将之前选中的清空\n            loading: false,\n        })\n    }\n\n    //删除\n    handleDelete = () => {\n        Modal.confirm({\n            title: '删除提示',\n            content: '确定删除所选用户？',\n            okText: '确认',\n            cancelText: '取消',\n            onOk:()=> {\n                console.log(this.state.selectedRowKeys);\n                console.log(this.state.dataSource);\n                notification.success({\n                    message: '提示',\n                    description: '删除成功！',\n                    duration:3,//3s自动关闭 默认4.5s，设置为null不关闭\n                })\n            },\n        })\n    }\n\n    onRowClick = (record,index) => {\n        console.log('onRowClick->record',record);\n        console.log('onRowClick->index', index);\n        const selectedRowKeys = [index];\n        this.setState({\n            selectedRowKeys,\n            selectedItem:record\n        });\n    }\n\n   \n\n    onSelectChange = (selectedRowKeys,selectedRows) => {\n        console.log(selectedRowKeys);\n        console.log('selectedRows',selectedRows);\n        this.setState({\n            selectedRowKeys,\n            selectedRows\n        });\n    }\n\n    getList = () => {\n        axios.ajax({\n            url: '/user/list',\n            params: this.params,\n        }).then((res) => {\n            console.log('res',res);\n            let _this = this;\n            if (res.code === 0) {\n                res.result.list.map((item, index) => {\n                    item.key = index;\n                })\n                console.log(res)\n                this.setState({\n                    dataSource:res.result.list,\n                    selectedRowKeys:[],\n                    selectedRows:null,\n                    pagination: Utils.pagination(res, (page, pageSize) => {\n                        _this.params.page = page;\n                        _this.params.pageSize = pageSize;\n                        this.getList();\n                    })\n                })\n            }\n        })\n    }\n\n    //组件已经挂载好了-->render函数执行完毕--->用的最多-常用来发起Ajax请求\n    componentDidMount() {\n        this.getList();\n    }\n\n\n\n    render() {\n        const columns = [\n            {\n                title:'id',\n                key:'id',\n                dataIndex:'id'\n            },\n            {\n                title:'用户名',\n                key:'userName',\n                dataIndex:'userName'\n            },\n            {\n                title:'头像',\n                key:'userImg',\n                dataIndex: 'userImg',\n                render : (userImg) => {\n                    return userImg?<Avatar src={userImg}/>:<Avatar style={{ backgroundColor: '#87d068' }} icon=\"user\" />\n                }\n            },\n            {\n                title:'性别',\n                key:'sex',\n                dataIndex: 'sex',\n                render: (sex) => {\n                    if (sex === 1) {\n                        return <Badge count='男' style={{ backgroundColor: '#1890ff' }} />;\n                    }\n                    return <Badge count='女' style={{ backgroundColor: '#52c41a' }} />;\n                }\n            },\n            {\n                title:'年龄',\n                key:'age',\n                dataIndex:'age'\n            },\n            {\n                title:'角色',\n                key:'role',\n                dataIndex: 'role',\n                render: (role) => {\n                    const roleObj = {\n                        1:'皇帝',\n                        2:'大臣',\n                        3:'宰相',\n                        4:'将军',\n                        5:'臣子',\n                    }\n                    return roleObj[role];\n                }\n            },\n            {\n                title:'爱好',\n                key:'interest',\n                dataIndex: 'interest',\n                render: (interest) => {\n                    const interestObj = {\n                        1:'写代码',\n                        2:'撩妹子',\n                        3:'打篮球',\n                        4:'泡网吧',\n                        5:'K歌',\n                    }\n                    let strArr = [];\n                    interest.map((item, index) => {\n                        strArr.push(interestObj[item]);\n                    })\n\n                    return (<Tooltip title={strArr.length >2? strArr.join(','):''}>\n                        <span>{strArr.length === 0?'无':strArr.length > 2?strArr.slice(0,2).join(',')+'...':strArr.join(',')}</span>\n                    </Tooltip>\n                    )\n                  \n                }\n            },\n            {\n                title:'是否婚配',\n                key:'isMarried',\n                dataIndex: 'isMarried',\n                render: (isMarried) => {\n                    if (isMarried) {\n                        return <Badge status=\"success\" text=\"是\" />;\n                    }\n                    return <Badge status=\"error\" text=\"否\" />;\n                }\n            },\n            {\n                title:'生日',\n                key:'birthday',\n                dataIndex: 'birthday',\n                render: (birthday) => {\n                    return moment(birthday * 1000).format(\"YYYY-MM-DD HH:mm:ss\");\n                }\n            },\n            {\n                title:'联系地址',\n                key:'address',\n                dataIndex: 'address',\n                render: (address) => {\n                    return (<Tooltip title={address.length >10? address:''}>\n                        <span>{address.length >10?address.slice(0,10)+'...':address}</span>\n                    </Tooltip>\n                    )\n                }\n            },\n            {\n                title:'早起时间',\n                key:'time',\n                dataIndex:'time'\n            }\n        ]\n        //设置表格内容 居中显示\n        columns.map(item => {\n            item.align = \"center\";\n        })\n        const { loading, selectedRowKeys,actionMode } = this.state;\n        const rowSelection = {\n            type:actionMode,\n            selectedRowKeys,\n            onChange: this.onSelectChange,\n        };\n        const hasSelected = selectedRowKeys.length > 0;\n        \n\n        return (\n            <div>\n                <Card title=\"基础表格\">\n                    <div>\n                        <div style={{ marginBottom: 16 }}>\n                            <Radio.Group defaultValue={actionMode} buttonStyle=\"solid\" onChange={this.onChangeBtn}>\n                                <Radio.Button value=\"radio\">单选</Radio.Button>\n                                <Radio.Button value=\"checkbox\">多选</Radio.Button>\n                            </Radio.Group>\n                            <Button\n                                style={{marginLeft:8}}\n                                type=\"danger\"\n                                disabled={!hasSelected}\n                                loading={loading}\n                                onClick={this.handleDelete}\n                            \n                            >删除</Button>\n                            <span style={{ marginLeft: 8 }}>\n                                {hasSelected?`当前选中${selectedRowKeys.length}项`:''}\n                            </span>\n                        </div>\n\n                    <Table\n                        size=\"middle\"\n                        bordered\n                        columns={columns}\n                        dataSource={this.state.dataSource}\n                        // pagination={false}\n                        pagination={this.state.pagination}\n                            rowSelection={rowSelection} //选择行\n                            onRow={(record,index) => {\n                                return {\n                                    onClick: () => {\n                                        //如果是单选模式可以点击行选中，多选不行\n                                        if (actionMode === \"radio\") {\n                                            this.onRowClick(record,index);\n                                        }\n                                    }\n                                }\n                            }}\n                    />\n                    </div>\n                    \n\n                    \n                </Card>\n            </div>\n        )\n    }\n\n    \n    \n\n\n}\n\n\n","import React from 'react';\nimport { Card, Table, Avatar, Badge, Tooltip, Button, Radio, Modal, notification, Form, Switch } from 'antd';\nimport moment from 'moment';\nimport axios from '../../axios/axios';\nimport Utils from '../../utils/utils';\nconst FormItem = Form.Item;\n\nconst scrollY = { y: 300 };\nconst scrollX = { x: 1300 };\n\nexport default class HightTable extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            dataSource: [],\n            selectedRowKeys: [],\n            loading: false,\n            scrollY: undefined,\n            scrollX: undefined,\n        }\n    }\n\n    params = {\n        page: 1,\n        pageSize: 10\n    }\n\n\n\n    //删除\n    handleDelete = () => {\n        Modal.confirm({\n            title: '删除提示',\n            content: '确定删除所选用户？',\n            okText: '确认',\n            cancelText: '取消',\n            onOk: () => {\n                console.log(this.state.selectedRowKeys);\n                console.log(this.state.dataSource);\n                notification.success({\n                    message: '提示',\n                    description: '删除成功！',\n                    duration: 3,//3s自动关闭 默认4.5s，设置为null不关闭\n                })\n            },\n        })\n    }\n\n\n    getList = () => {\n        axios.ajax({\n            url: '/user/list',\n            params: this.params,\n        }).then((res) => {\n            console.log('res', res);\n            let _this = this;\n            if (res.code === 0) {\n                res.result.list.map((item, index) => {\n                    item.key = index;\n                })\n                console.log(res)\n                this.setState({\n                    dataSource: res.result.list,\n                    selectedRowKeys: [],\n                    selectedRows: null,\n                    pagination: Utils.pagination(res, (page, pageSize) => {\n                        _this.params.page = page;\n                        _this.params.pageSize = pageSize;\n                        this.getList();\n                    })\n                })\n            }\n        })\n    }\n\n    //组件已经挂载好了-->render函数执行完毕--->用的最多-常用来发起Ajax请求\n    componentDidMount() {\n        this.getList();\n    }\n\n    //固定头部\n    handleScollYChange = (enable) => {\n        this.setState({\n            scrollY: enable ? scrollY : undefined\n        })\n    }\n\n    handleScollXChange = (enable) => {\n        this.setState({\n            scrollX: enable ? scrollX : undefined\n        })\n    }\n\n\n    render() {\n        const columns1 = [\n            {\n                title: 'id',\n                key: 'id',\n                dataIndex: 'id',\n            },\n            {\n                title: '用户名',\n                key: 'userName',\n                dataIndex: 'userName',\n            },\n            {\n                title: '头像',\n                key: 'userImg',\n                dataIndex: 'userImg',\n                render: (userImg) => {\n                    return userImg ? <Avatar src={userImg} /> : <Avatar style={{ backgroundColor: '#87d068' }} icon=\"user\" />\n                }\n            },\n            {\n                title: '性别',\n                key: 'sex',\n                dataIndex: 'sex',\n                render: (sex) => {\n                    if (sex === 1) {\n                        return <Badge count='男' style={{ backgroundColor: '#1890ff' }} />;\n                    }\n                    return <Badge count='女' style={{ backgroundColor: '#52c41a' }} />;\n                }\n            },\n            {\n                title: '年龄',\n                key: 'age',\n                dataIndex: 'age',\n                sorter: (a, b) => a.age - b.age\n            },\n            {\n                title: '角色',\n                key: 'role',\n                dataIndex: 'role',\n                render: (role) => {\n                    const roleObj = {\n                        1: '皇帝',\n                        2: '大臣',\n                        3: '宰相',\n                        4: '将军',\n                        5: '臣子',\n                    }\n                    return roleObj[role];\n                }\n            },\n            {\n                title: '爱好',\n                key: 'interest',\n                dataIndex: 'interest',\n                render: (interest) => {\n                    const interestObj = {\n                        1: '写代码',\n                        2: '撩妹子',\n                        3: '打篮球',\n                        4: '泡网吧',\n                        5: 'K歌',\n                    }\n                    let strArr = [];\n                    interest.map((item, index) => {\n                        strArr.push(interestObj[item]);\n                    })\n\n                    return (<Tooltip title={strArr.length > 2 ? strArr.join(',') : ''}>\n                        <span>{strArr.length === 0 ? '无' : strArr.length > 2 ? strArr.slice(0, 2).join(',') + '...' : strArr.join(',')}</span>\n                    </Tooltip>\n                    )\n\n                }\n            },\n            {\n                title: '是否婚配',\n                key: 'isMarried',\n                dataIndex: 'isMarried',\n                render: (isMarried) => {\n                    if (isMarried) {\n                        return <Badge status=\"success\" text=\"是\" />;\n                    }\n                    return <Badge status=\"error\" text=\"否\" />;\n                }\n            },\n            {\n                title: '生日',\n                key: 'birthday',\n                dataIndex: 'birthday',\n                render: (birthday) => {\n                    return moment(birthday * 1000).format(\"YYYY-MM-DD HH:mm:ss\");\n                }\n            },\n            {\n                title: '联系地址',\n                key: 'address',\n                dataIndex: 'address',\n                render: (address) => {\n                    return (<Tooltip title={address.length > 10 ? address : ''}>\n                        <span>{address.length > 10 ? address.slice(0, 10) + '...' : address}</span>\n                    </Tooltip>\n                    )\n                }\n            },\n            {\n                title: '早起时间',\n                key: 'time',\n                dataIndex: 'time',\n            },\n            {\n                title: '功能操作',\n                key: 'action',\n                dataIndex: 'action',\n                render: () => {\n                    return (\n                        <div>\n                            <Button size=\"small\" type=\"primary\">修改</Button>\n                            <Button onClick={this.handleDelete} size=\"small\" type=\"danger\">删除</Button>\n                            <Button size=\"small\" type=\"default\">记录</Button>\n                            <Button size=\"small\" type=\"dashed\">复制</Button>\n                        </div>\n                    )\n                }\n            },\n\n        ]\n\n        columns1.map((item,index) => {\n            item.align = \"center\";\n            item.width = 80\n            if (index === columns1.length - 1) {\n                item.width = 200\n            }\n        })\n\n\n\n        const columns2 = [\n            {\n                title: 'id',\n                key: 'id',\n                dataIndex: 'id',\n                fixed: 'left',\n            },\n            {\n                title: '用户名',\n                key: 'userName',\n                dataIndex: 'userName',\n            },\n            {\n                title: '头像',\n                key: 'userImg',\n                dataIndex: 'userImg',\n                render: (userImg) => {\n                    return userImg ? <Avatar src={userImg} /> : <Avatar style={{ backgroundColor: '#87d068' }} icon=\"user\" />\n                }\n            },\n            {\n                title: '性别',\n                key: 'sex',\n                dataIndex: 'sex',\n                render: (sex) => {\n                    if (sex === 1) {\n                        return <Badge count='男' style={{ backgroundColor: '#1890ff' }} />;\n                    }\n                    return <Badge count='女' style={{ backgroundColor: '#52c41a' }} />;\n                }\n            },\n            {\n                title: '年龄',\n                key: 'age',\n                dataIndex: 'age'\n            },\n            {\n                title: '角色',\n                key: 'role',\n                dataIndex: 'role',\n                render: (role) => {\n                    const roleObj = {\n                        1: '皇帝',\n                        2: '大臣',\n                        3: '宰相',\n                        4: '将军',\n                        5: '臣子',\n                    }\n                    return roleObj[role];\n                }\n            },\n            {\n                title: '爱好',\n                key: 'interest',\n                dataIndex: 'interest',\n                render: (interest) => {\n                    const interestObj = {\n                        1: '写代码',\n                        2: '撩妹子',\n                        3: '打篮球',\n                        4: '泡网吧',\n                        5: 'K歌',\n                    }\n                    let strArr = [];\n                    interest.map((item, index) => {\n                        strArr.push(interestObj[item]);\n                    })\n\n                    return (<Tooltip title={strArr.length > 2 ? strArr.join(',') : ''}>\n                        <span>{strArr.length === 0 ? '无' : strArr.length > 2 ? strArr.slice(0, 2).join(',') + '...' : strArr.join(',')}</span>\n                    </Tooltip>\n                    )\n\n                }\n            },\n            {\n                title: '是否婚配',\n                key: 'isMarried',\n                dataIndex: 'isMarried',\n                render: (isMarried) => {\n                    if (isMarried) {\n                        return <Badge status=\"success\" text=\"是\" />;\n                    }\n                    return <Badge status=\"error\" text=\"否\" />;\n                }\n            },\n            {\n                title: '生日',\n                key: 'birthday',\n                dataIndex: 'birthday',\n                render: (birthday) => {\n                    return moment(birthday * 1000).format(\"YYYY-MM-DD HH:mm:ss\");\n                }\n            },\n            {\n                title: '联系地址',\n                key: 'address',\n                dataIndex: 'address',\n                render: (address) => {\n                    return (<Tooltip title={address.length > 10 ? address : ''}>\n                        <span>{address.length > 10 ? address.slice(0, 10) + '...' : address}</span>\n                    </Tooltip>\n                    )\n                }\n            },\n            {\n                title: '早起时间',\n                key: 'time',\n                dataIndex: 'time',\n            },\n            {\n                title: '早起时间',\n                key: 'time',\n                dataIndex: 'time',\n            },\n            {\n                title: '早起时间',\n                key: 'time',\n                dataIndex: 'time',\n            },\n            {\n                title: '早起时间',\n                key: 'time',\n                dataIndex: 'time',\n            },\n            {\n                title: '早起时间',\n                key: 'time',\n                dataIndex: 'time',\n            },\n            {\n                title: '早起时间',\n                key: 'time',\n                dataIndex: 'time',\n                fixed: 'right',\n            }\n        ]\n\n       \n\n\n        //设置表格内容 居中显示\n        columns2.map(item => {\n            item.align = \"center\";\n            item.width = 80\n        })\n        const { loading, selectedRowKeys } = this.state;\n\n        const hasSelected = selectedRowKeys.length > 0;\n\n\n        return (\n            <div>\n                <Card title=\"高级表格-头固定-排序-操作按钮\">\n                    <div>\n                        <div style={{ marginBottom: 16 }}>\n                            <Form layout=\"inline\">\n                                <FormItem label=\"头部固定\">\n                                    <Switch checkedChildren=\"开\" unCheckedChildren=\"关\" checked={!!this.state.scrollY} onChange={this.handleScollYChange} />\n                                </FormItem>\n                            </Form>\n                            <Button\n                                style={{ marginLeft: 8 }}\n                                type=\"danger\"\n                                disabled={!hasSelected}\n                                loading={loading}\n                                onClick={this.handleDelete}\n\n                            >删除</Button>\n                            <span style={{ marginLeft: 8 }}>\n                                {hasSelected ? `当前选中${selectedRowKeys.length}项` : ''}\n                            </span>\n                        </div>\n\n                        <Table\n                            size=\"middle\"\n                            bordered\n                            columns={columns1}\n                            dataSource={this.state.dataSource}\n                            // pagination={false}\n                            pagination={this.state.pagination}\n                            scroll={this.state.scrollY}\n                        />\n                    </div>\n\n\n\n                </Card>\n\n                <Card title=\"高级表格-列固定\">\n                    <div>\n                        <div style={{ marginBottom: 16 }}>\n                            <Form layout=\"inline\">\n                                <FormItem label=\"列固定\">\n                                    <Switch checkedChildren=\"开\" unCheckedChildren=\"关\" checked={!!this.state.scrollX} onChange={this.handleScollXChange} />\n                                </FormItem>\n\n\n                            </Form>\n                            <Button\n                                style={{ marginLeft: 8 }}\n                                type=\"danger\"\n                                disabled={!hasSelected}\n                                loading={loading}\n                                onClick={this.handleDelete}\n\n                            >删除</Button>\n                            <span style={{ marginLeft: 8 }}>\n                                {hasSelected ? `当前选中${selectedRowKeys.length}项` : ''}\n                            </span>\n                        </div>\n\n                        <Table\n                            size=\"middle\"\n                            bordered\n                            columns={columns2}\n                            dataSource={this.state.dataSource}\n                            // pagination={false}\n                            pagination={this.state.pagination}\n                            scroll={this.state.scrollX}\n                        />\n                    </div>\n\n\n\n                </Card>\n            </div>\n        )\n    }\n\n\n\n\n\n}\n\n\n","import React from 'react';\nimport { Card, Form, Select, Button, Table, message, Modal, Radio, notification } from 'antd';\nimport axios from '../../axios/axios';\nimport Utils from './../../utils/utils';\nimport moment from 'moment';\n\n\nconst FormItem = Form.Item;\nconst Option = Select.Option;\n\nconst cityIdArr = [\n    { id: '', name: '全部' },\n    { id: 1, name: '北京' },\n    { id: 2, name: '上海' },\n    { id: 3, name: '广州' },\n    { id: 4, name: '深圳' },\n    { id: 5, name: '成都' }\n]\n\nconst modeArr = [\n    { id: '', name: '全部' },\n    { id: 1, name: '指定停车点模式' },\n    { id: 2, name: '禁停区模式' },\n]\nconst opModeArr = [\n    { id: '', name: '全部' },\n    { id: 1, name: '自营' },\n    { id: 2, name: '加盟' },\n]\nconst authStatusArr = [\n    { id: '', name: '全部' },\n    { id: 1, name: '已授权' },\n    { id: 2, name: '未授权' },\n]\nexport default class City extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isShowOpenCityModal: false,\n        };\n    }\n    params = {\n        page: 1,\n        pageSize: 10,\n    }\n\n    getList() {\n        let _this = this;\n        axios.ajax({\n            url: '/open/city',\n            data: { ...this.params }\n        }).then((res) => {\n            let list = res.result.list.map((item, index) => {\n                item.key = index;\n                return item;\n            });\n            this.setState({\n                list: list,\n                pagination: Utils.pagination(res, (current) => {\n                    _this.params.page = current;\n                    _this.getList();\n                })\n            })\n        })\n    }\n\n    componentDidMount() {\n        this.getList();\n    }\n\n    //搜索-用选择的数据发请求\n    search = (postData) => {\n        console.log('postData', postData)\n        message.info(`提交的搜索条件：${JSON.stringify(postData)}`)\n    }\n\n    //开通城市按钮-显示Modal\n    handleOpenCity = () => {\n        this.setState(() => {\n            return {\n                isShowOpenCityModal: true\n            }\n        })\n    }\n\n    //弹框-开通城市-确定提交\n    openCitySubmit = () => {\n        let cityInfo = this.cityForm.props.form.getFieldsValue();\n        message.info(`开通城市所选数据：${JSON.stringify(cityInfo)}`);\n        setTimeout(() => {\n            this.setState(() => {\n                return {\n                    isShowOpenCityModal: false\n                }\n            })\n            notification.success({\n                message: '提示',\n                description: '开通成功',\n            })\n        }, 3000)\n    }\n\n    render() {\n        const columns = [\n            {\n                title: '城市ID',\n                dataIndex: 'id',\n                width: 80,\n            },\n            {\n                title: '城市名称',\n                dataIndex: 'name',\n                width: 135,\n            },\n            {\n                title: '用车模式',\n                dataIndex: 'mode',\n                render: (mode) => {\n                    return mode == 1 ? '停车点' : '禁停区';\n                },\n                width: 135,\n            },\n            {\n                title: '营运模式',\n                dataIndex: 'op_mode',\n                render(op_mode) {\n                    return op_mode == 1 ? '自营' : '加盟';\n                },\n                width: 100,\n            },\n            {\n                title: '授权加盟商',\n                dataIndex: 'franchisee_name',\n                width: 135,\n            },\n            {\n                title: '城市管理员',\n                dataIndex: 'city_admins',\n                render(arr) {\n                    return arr.map((item) => {\n                        return item.user_name;\n                    }).join(',');\n                },\n                width: 150,\n            },\n            {\n                title: '城市开通时间',\n                dataIndex: 'open_time',\n                render: (open_time) => {\n                    return moment(open_time * 1000).format(\"YYYY-MM-DD HH:mm:ss\");\n                },\n                width: 200,\n            },\n            {\n                title: '操作时间',\n                dataIndex: 'update_time',\n                render: (update_time) => {\n                    return moment(update_time * 1000).format(\"YYYY-MM-DD HH:mm:ss\");\n                },\n                width: 200,\n            },\n            {\n                title: '操作人',\n                dataIndex: 'sys_user_name',\n            }\n        ]\n\n        columns.map((item, index) => {\n            item.align = \"center\";\n        })\n\n\n\n\n        return (\n            <div>\n                <Card>\n                    <FilterForm\n                        search={this.search}\n                    />\n                </Card>\n                <Card style={{ marginTop: 20 }}>\n                    <Button type=\"primary\" onClick={this.handleOpenCity}>开通城市</Button>\n                </Card>\n                <div className=\"content-wrap\">\n                    <Table\n                        bordered\n                        columns={columns}\n                        dataSource={this.state.list}\n                        pagination={this.state.pagination}\n                        scroll={{ y: 350 }}\n                    />\n                </div>\n                <Modal\n                    title=\"开通城市\"\n                    visible={this.state.isShowOpenCityModal}\n                    onCancel={() => {\n                        this.setState(() => {\n                            return {\n                                isShowOpenCityModal: false\n                            }\n                        })\n                        this.cityForm.props.form.resetFields();\n                    }}\n                    onOk={this.openCitySubmit}\n                >\n                    <OpenCityFormModal wrappedComponentRef={(open) => { this.cityForm = open; }} />\n                </Modal>\n            </div>\n        )\n    }\n}\n\nclass FilterForm extends React.Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    //搜索\n    search = (e) => {\n        e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                console.log(values)\n                this.props.search(values);\n            }\n        })\n    }\n\n    //重置\n    reset = () => {\n        this.props.form.resetFields();\n    }\n\n    render() {\n        const { getFieldDecorator } = this.props.form;\n        return (\n            <Form layout=\"inline\">\n                <FormItem label=\"城市\">\n                    {\n                        getFieldDecorator('city_id', {\n                            initialValue: ''\n                        })(\n                            <Select style={{ width: 135 }}>\n                                {\n                                    cityIdArr.map((item, index) => {\n                                        return <Option key={item.id} value={item.id}>{item.name}</Option>\n                                    })\n                                }\n                            </Select>\n                        )\n                    }\n                </FormItem>\n                <FormItem label=\"用车模式\">\n                    {\n                        getFieldDecorator('mode', {\n                            initialValue: ''\n                        })(\n                            <Select style={{ width: 140 }}>\n                                {\n                                    modeArr.map((item, index) => {\n                                        return <Option key={item.id} value={item.id}>{item.name}</Option>\n                                    })\n                                }\n                            </Select>\n                        )\n                    }\n                </FormItem>\n\n\n                <FormItem label=\"运营模式\">\n                    {\n                        getFieldDecorator('op_mode', {\n                            initialValue: ''\n                        })(\n                            <Select style={{ width: 100 }}>\n                                {\n                                    opModeArr.map((item, index) => {\n                                        return <Option key={item.id} value={item.id}>{item.name}</Option>\n                                    })\n                                }\n                            </Select>\n                        )\n                    }\n                </FormItem>\n\n                <FormItem label=\"加盟商授权状态\">\n                    {\n                        getFieldDecorator('auth_status', {\n                            initialValue: ''\n                        })(\n                            <Select style={{ width: 100 }}>\n                                {\n                                    authStatusArr.map((item, index) => {\n                                        return <Option key={item.id} value={item.id}>{item.name}</Option>\n                                    })\n                                }\n                            </Select>\n                        )\n                    }\n                </FormItem>\n                <FormItem>\n                    <Button onClick={this.search} type=\"primary\" icon=\"search\" style={{ margin: '0 10px' }}>搜索</Button>\n                    <Button onClick={this.reset}>重置</Button>\n                </FormItem>\n\n            </Form>\n        )\n    }\n}\n\nFilterForm = Form.create({})(FilterForm);\n\n\n\n\nclass OpenCityFormModal extends React.Component {\n\n    render() {\n        const formItemLayout = {\n            labelCol: {\n                span: 5\n            },\n            wrapperCol: {\n                span: 19\n            }\n        }\n        const { getFieldDecorator } = this.props.form;\n\n        return (\n            <Form layout=\"horizontal\">\n                <FormItem label=\"选择城市\" {...formItemLayout}>\n                    {\n                        getFieldDecorator('city_id', {\n                            initialValue: 1,\n                        })(\n                            <Select style={{ width: 100 }}>\n                                {\n                                    cityIdArr.filter((item, index) => index > 0).map((item) => {\n                                        return <Option key={item.id} value={item.id}>{item.name}</Option>\n                                    })\n                                }\n                            </Select>\n                        )\n                    }\n                </FormItem>\n\n                <FormItem label=\"运营模式\" {...formItemLayout}>\n                    {\n                        getFieldDecorator('op_mode', {\n                            initialValue: 1,\n                        })(\n                            <Radio.Group>\n                                {\n                                    opModeArr.filter((item, index) => index > 0).map((item) => {\n                                        return <Radio key={item.id} value={item.id}>{item.name}</Radio>\n                                    })\n                                }\n\n                            </Radio.Group>\n                        )\n                    }\n                </FormItem>\n\n                <FormItem label=\"用车模式\" {...formItemLayout}>\n                    {\n                        getFieldDecorator('use_mode', {\n                            initialValue: 1,\n                        })(\n                            <Radio.Group>\n                                {\n                                    modeArr.filter((item, index) => index > 0).map((item) => {\n                                        return <Radio key={item.id} value={item.id}>{item.name}</Radio>\n                                    })\n                                }\n\n                            </Radio.Group>\n                        )\n                    }\n                </FormItem>\n\n            </Form>\n        );\n    }\n}\n\nOpenCityFormModal = Form.create({})(OpenCityFormModal);","import React from 'react';\nimport { Card, Form, Select, Button, Table, message, Modal, Radio, notification, DatePicker } from 'antd';\nimport axios from '../../axios/axios';\nimport Utils from './../../utils/utils';\nimport moment from 'moment';\n\nconst FormItem = Form.Item;\nconst Option = Select.Option;\nconst cityIdArr = [\n    { id: '', name: '全部' },\n    { id: 1, name: '北京' },\n    { id: 2, name: '上海' },\n    { id: 3, name: '广州' },\n    { id: 4, name: '深圳' },\n    { id: 5, name: '成都' }\n]\nconst orderStatusArr = [\n    { id: '', name: '全部' },\n    { id: 1, name: '进行中' },\n    { id: 2, name: '进行中(临时锁车)' },\n    { id: 3, name: '行程结束' }\n]\n\n\nexport default class Order extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            list: [],//列表数据\n            pagination:()=>{},//分页\n            selectedRowKeys: [],//选择列表index数组 单选就是类似：[0]\n            selectedItem: {},//选中列表项\n            isShowFinishOrderModal: false,//是否显示结束订单弹框\n            orderInfo: {},//结束订单弹框详情\n            finishOrderBtnDisabled: true,\n            orderDetailBtnDisabled:true,\n        }\n    }\n\n    params = {\n        page: 1,\n        pageSize: 10,\n    }\n\n\n    //搜索-用选择的数据发请求\n    search = (postData) => {\n        postData.startTime = moment(postData.startTime).unix();\n        postData.endTime = moment(postData.endTime).unix();\n        console.log('postData', postData)\n        message.info(`提交的搜索条件：${JSON.stringify(postData)}`)\n    }\n\n    componentDidMount() {\n        this.getList();\n    }\n\n    onRowClick = (item,index) => {\n        this.setState({\n            selectedRowKeys: [index],\n            selectedItem: item,\n            finishOrderBtnDisabled: false,\n            orderDetailBtnDisabled: false,\n        })\n    }\n\n    //订单详情\n    orderDetail = () => {\n        let orderId = this.state.selectedItem.id;\n        window.open(`/#/common/order/detail/${orderId}`,'_blank')\n    }\n\n    //结束订单 弹框\n    finishOrder = () => {\n        let item = this.state.selectedItem;\n       \n        // if (Object.keys(item).length === 0) {\n        //     //判断是否选择了，这里是由于在constructor里面的state初始化了selectedItem为{}\n        //     Modal.info({\n        //         title: '提示',\n        //         content:'请选择一条订单进行结束'\n        //     })\n        //     return;\n        // }\n        this.getOrderInfo(item);\n    }\n\n    //结束订单提交\n    onFinishOrderSubmit = () => {\n        axios.ajax({\n            url: '/order/finish',\n            method: 'post',\n            data: {\n                orderId:this.state.selectedItem.id\n            }\n        }).then((res) => {\n            if (res.code === 0) {\n                message.success('订单结束成功');\n                this.setState({\n                    isShowFinishOrderModal:false\n                })\n                this.getList();\n                this.setState({\n                    selectedRowKeys: [],//结束后取消掉之前的选中\n                    selectedItem: {},//结束后重置详情数据\n                    finishOrderBtnDisabled: true,\n                    orderDetailBtnDisabled: true,\n                    \n                })\n            }\n        })\n    }\n\n    //获取订单详情\n    getOrderInfo = (item) => {\n        axios.ajax({\n            url: '/order/finish/info',\n            data: {\n                orderId:item.orderId\n            }\n        }).then((res) => {\n            if (res.code === 0) {\n                this.setState({\n                    isShowFinishOrderModal:true,\n                    orderInfo:res.result\n                })\n            }\n        })\n    }\n\n    getList = () => {\n        axios.ajax({\n            url: '/order/list',\n            data: {\n                ...this.params\n            }\n        }).then((res) => {\n            let _this = this;\n            if (res.code === 0) {\n                let list = res.result.list.map((item, index) => {\n                    item.key = index;\n                    return item;\n                })\n                this.setState({\n                    list,\n                    pagination:Utils.pagination(res,(current)=>{\n                        _this.params.page = current;\n                        _this.getList();\n                    })\n                })\n            }\n        })\n    }\n\n   \n\n    render() {\n        const columns = [\n            {\n                title: '订单编号',\n                dataIndex: 'orderSn',\n            },\n            {\n                title: '车辆编号',\n                dataIndex: 'bikeSn',\n            },\n            {\n                title: '用户名',\n                dataIndex: 'userName',\n            },\n            {\n                title: '手机号码',\n                dataIndex: 'mobile',\n            },\n            {\n                title: '里程',\n                dataIndex: 'distance',\n                render: (distance) => {\n                    return distance/1000 + 'km'\n                }\n            },\n            {\n                title: '行程时长',\n                dataIndex: 'totalTime',\n            },\n            {\n                title: '状态',\n                dataIndex: 'status',\n                render: (status) => {\n                    return status === 1?'进行中':'行程结束'\n                }\n            },\n            {\n                title: '开始时间',\n                dataIndex:'startTime',\n            },\n            {\n                title: '结束时间',\n                dataIndex: 'endTime',\n            },\n            {\n                title: '订单金额',\n                dataIndex: 'totalFee',\n            },\n            {\n                title: '实付金额',\n                dataIndex: 'userPay',\n            }\n        ]\n        columns.map(item => item.align = \"center\");\n        const selectedRowKeys = this.state.selectedRowKeys;\n        const rowSelection = {\n            type: 'radio',\n            selectedRowKeys\n        }\n        const formItemLayout = {\n            labelCol:{span:5},\n            wrapperCol:{span:19}\n        }\n\n        return (\n            <div>\n                <Card>\n                    <FilterForm search={this.search} />\n                </Card>\n                <Card style={{marginTop:20}}>\n                    <Button type=\"primary\" disabled={this.state.orderDetailBtnDisabled} onClick={this.orderDetail}>订单详情</Button>\n                    <Button type=\"primary\" disabled={this.state.finishOrderBtnDisabled} style={{marginLeft:10}} onClick={this.finishOrder}>结束订单</Button>\n                </Card>\n                <div className=\"content-wrap\">\n                    <Table\n                        bordered\n                        columns={columns}\n                        dataSource={this.state.list}\n                        pagination={this.state.pagination}\n                        rowSelection={rowSelection}\n                        onRow={(item,index) => {\n                            return {\n                                onClick: () => {\n                                    this.onRowClick(item,index);\n                                }\n                            }\n                        }}\n                    />\n                </div>\n                <Modal\n                    title=\"结束订单\"\n                    width={600}\n                    visible={this.state.isShowFinishOrderModal}\n                    onCancel={() => {\n                        this.setState({\n                            isShowFinishOrderModal:false,\n                        })\n                    }}\n                    onOk={this.onFinishOrderSubmit}\n                >\n                    <Form layout=\"horizontal\">\n                        <FormItem label=\"车辆编号\" {...formItemLayout}>\n                            {this.state.orderInfo.bikeSn}\n                        </FormItem>\n                        <FormItem label=\"剩余电量\" {...formItemLayout}>\n                            {this.state.orderInfo.battery + '%'}\n                        </FormItem>\n                        <FormItem label=\"行程开始时间\" {...formItemLayout}>\n                            {this.state.orderInfo.startTime}\n                        </FormItem>\n                        <FormItem label=\"当前位置\" {...formItemLayout}>\n                            {this.state.orderInfo.location}\n                        </FormItem>\n                    </Form>\n                </Modal>\n            </div>\n        )\n    }\n}\n\n\n\nclass FilterForm extends React.Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    //搜索\n    search = (e) => {\n        e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                console.log(values)\n                this.props.search(values);\n            }\n        })\n    }\n\n\n    render() {\n        const { getFieldDecorator } = this.props.form;\n        return (\n            <Form layout=\"inline\">\n                <FormItem label=\"城市\">\n                    {\n                        getFieldDecorator('city', {\n                            initialValue: '',\n                        })(\n                            <Select style={{ width: 135 }}>\n                                {\n                                    cityIdArr.map((item, index) => {\n                                        return <Option value={item.id} key={item.id}>{item.name}</Option>\n                                    })\n                                }\n\n                            </Select>\n                        )\n                    }\n                </FormItem>\n                <FormItem>\n                    {\n                        getFieldDecorator('startTime', {\n                            initialValue:null\n                        })(\n                            <DatePicker showTime={true} style={{ width: 200 }} format=\"YYYY-MM-DD HH:mm:ss\" placeholder=\"请选择开始时间\" />\n                        )\n                    }\n                </FormItem>\n                <FormItem label=\"~\" colon={false} >\n                    {\n                        getFieldDecorator('endTime', {\n                            initialValue:null\n                        })(\n                            <DatePicker showTime={true} style={{ width: 200 }} format=\"YYYY-MM-DD HH:mm:ss\" placeholder=\"请选择结束时间\" />\n                        )\n                    }\n                </FormItem>\n\n                <FormItem label=\"订单状态\">\n                    {\n                        getFieldDecorator('orderStatus', {\n                            initialValue: '',\n                        })(\n                            <Select style={{ width: 135 }}>\n                                {\n                                    orderStatusArr.map((item, index) =>\n                                        <Option value={item.id} key={item.id}>{item.name}</Option>\n                                    )\n                                }\n\n                            </Select>\n                        )\n                    }\n                </FormItem>\n\n                <FormItem>\n                    <Button onClick={this.search} type=\"primary\" icon=\"search\" style={{ margin: '0 10px' }}>搜索</Button>\n                    <Button onClick={() => this.props.form.resetFields()}>重置</Button>\n                </FormItem>\n\n            </Form>\n        )\n    }\n}\nFilterForm = Form.create({})(FilterForm);\n","import React from 'react';\nimport { Card } from 'antd';\nimport axios from '../../axios/axios';\nimport './detail.less'\n\n\nfunction* getInfo(orderId) {\n    yield axios.ajax({\n            url: '/order/detail',\n            data: {\n                orderId,\n            }\n        })\n}\n\nexport default class OrderDetail extends React.Component{\n    constructor(props) {\n        super(props)\n        this.state = {\n            orderInfo: {}\n        }\n    }\n    componentDidMount() {\n        let orderId = this.props.match.params.orderId * 1;\n        this.getOrderDetailInfo(orderId);\n    }\n\n    getOrderDetailInfo = (orderId) => {\n        let order = getInfo(orderId).next().value;\n        order.then((res) => {\n            if (res.code === 0) {\n                this.setState({\n                    orderInfo: res.result\n                })\n                this.renderMap(res.result);\n            }\n        })\n\n        // axios.ajax({\n        //     url: '/order/detail',\n        //     data: {\n        //         orderId,\n        //     }\n        // }).then((res) => {\n        //     if (res.code === 0) {\n        //         this.setState({\n        //             orderInfo: res.result\n        //         })\n        //         this.renderMap(res.result);\n        //     }\n        // })\n    }\n\n    renderMap = (result)=>{\n        this.map = new window.BMap.Map('orderDetailMap');\n        this.addMapControl();\n        this.drawBikeRoute(result.positionList);\n        this.drwaServiceArea(result.area);\n    }\n\n    //添加控件\n    addMapControl = () => {\n        this.map.addControl(new window.BMap.ScaleControl({ anchor: window.BMAP_ANCHOR_TOP_RIGHT }));\n        this.map.addControl(new window.BMap.NavigationControl({ anchor: window.BMAP_ANCHOR_TOP_RIGHT }));\n    }\n    //画行使路线\n    drawBikeRoute = (positionList) => {\n        let startPoint = '';\n        let endPoint = '';\n        if (positionList.length > 0) {\n            let first = positionList[0];\n            let last = positionList[positionList.length - 1];\n            startPoint = new window.BMap.Point(first.lon, first.lat);\n            endPoint = new window.BMap.Point(last.lon, last.lat);\n            let startIcon = new window.BMap.Icon('/assets/img/start_point.png',\n                new window.BMap.Size(36, 42),\n                {\n                    imageSize: new window.BMap.Size(36, 42),\n                    anchor:new window.BMap.Size(18, 42)\n                }\n            )\n            let startMarker = new window.BMap.Marker(startPoint, { icon: startIcon });\n            this.map.addOverlay(startMarker);\n\n            //终点\n            let endIcon = new window.BMap.Icon('/assets/img/end_point.png',\n            new window.BMap.Size(36, 42),\n                {\n                    imageSize: new window.BMap.Size(36, 42),\n                    anchor:new window.BMap.Size(18, 42)\n                }\n            )\n            let endMarker = new window.BMap.Marker(endPoint, { icon: endIcon });\n            this.map.addOverlay(endMarker);\n            \n            //连接路线\n            let trackPoint = [];\n            positionList.map((item) => {\n                trackPoint.push(new window.BMap.Point(item.lon, item.lat));\n            })\n            let polyline = new window.BMap.Polyline(trackPoint, {\n                strokeColor:'#1869AD',\n                strokeWeight:3,\n                strokeOpacity:1\n            });\n            this.map.addOverlay(polyline);\n            this.map.centerAndZoom(endPoint, 11);\n\n        }\n    }\n\n    //画服务区\n    drwaServiceArea = (areaList) => {\n        let trackPoint = [];\n        areaList.map((item) => {\n            trackPoint.push(new window.BMap.Point(item.lon, item.lat));\n        })\n        let polygon = new window.BMap.Polygon(trackPoint, {\n            strokeColor:'#CE0000',\n            strokeWeight:4,\n            strokeOpacity: 1,\n            fillColor: '#ff8605',\n            fillOpacity:0.4\n        });\n        this.map.addOverlay(polygon);\n    }\n\n\n    render() {\n        const orderInfo = this.state.orderInfo;\n        return (\n            <div>\n                <Card title=\"订单详情\">\n                    <div id=\"orderDetailMap\" className=\"order-map\"></div>\n                    <div className=\"detail-items\">\n                        <div className=\"item-title\">基础信息</div>\n                        <ul className=\"detail-form\">\n                            <li>\n                                <div className=\"detail-form-left\">用车模式</div>\n                                <div className=\"detail-form-content\">{orderInfo.mode === 1?'服务区':'停车点'}</div>\n                            </li>\n                            <li>\n                                <div className=\"detail-form-left\">订单编号</div>\n                                <div className=\"detail-form-content\">{orderInfo.orderSn}</div>\n                            </li>\n                            <li>\n                                <div className=\"detail-form-left\">车辆编号</div>\n                                    <div className=\"detail-form-content\">{orderInfo.bikeSn}</div>\n                            </li>\n                            <li>\n                                <div className=\"detail-form-left\">用户姓名</div>\n                                <div className=\"detail-form-content\">{orderInfo.userName}</div>\n                            </li>\n                            <li>\n                                <div className=\"detail-form-left\">手机号码</div>\n                                <div className=\"detail-form-content\">{orderInfo.mobile}</div>\n                            </li> \n                        </ul>\n                    </div>\n                    <div className=\"detail-items\">\n                        <div className=\"item-title\">行驶轨迹</div>\n                        <ul className=\"detail-form\">\n                            <li>\n                                <div className=\"detail-form-left\">行程起点</div>\n                                <div className=\"detail-form-content\">{orderInfo.startLocation}</div>\n                            </li>\n                            <li>\n                                <div className=\"detail-form-left\">行程终点</div>\n                                <div className=\"detail-form-content\">{orderInfo.endLocation}</div>\n                            </li>\n                            <li>\n                                <div className=\"detail-form-left\">行驶里程</div>\n                                <div className=\"detail-form-content\">{orderInfo.distance/1000}公里</div>\n                            </li>\n                        </ul>\n                    </div>\n                </Card>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport { Row } from 'antd';\n\nimport Header from './components/Header/Header'\nimport './style/common.less'\n\nclass Common extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                <Row className=\"simple-page\">\n                    <Header menuType=\"second\"></Header>\n                </Row>\n                <Row className=\"content\" style={{marginTop:54}}>\n                    {this.props.children}\n                </Row>\n            </div>\n        )\n    }\n}\nexport default Common\n\n","import ACTION_TYPES from '../actionCreators/actionTypes';\n\n\n\nconst handleState = new Map([\n    [\n        { type: ACTION_TYPES.INIT_ACTION_DATA },\n        (state, action) => {\n            state.list = action.data.map(({ userName }) => userName);\n            return state;\n        }\n    ],\n    [\n        { type: ACTION_TYPES.TODOLIST_VALUE_CHANGE },\n        (state, action) => {\n            state.inputVal = action.value;\n            return state;\n        }\n    ],\n    [\n        { type: ACTION_TYPES.TODOLIST_TODO_ITEM_ADD },\n        (state, action) => {\n            return {\n                // ...state,\n                list: [...state.list,state.inputVal],\n                inputVal: '',\n            };\n        }\n    ],\n    [\n        { type: ACTION_TYPES.TODOLIST_TODO_ITEM_DELETE },\n        (state, action) => {\n            state.list.splice(action.index, 1);\n            return state;\n        }\n    ],\n]);\n\nconst defaultState = {\n    inputVal: '',\n    list: []\n}\n\nexport default ((state = defaultState, action) => {\n    let newState = JSON.parse(JSON.stringify(state)); //深拷贝 state\n    // let newState = { ...state };//深拷贝 state\n    \n    [...handleState].map(([key, func]) => {\n        if (key.type && key.type === action.type) {\n            newState = func(newState,action);\n        }\n    })\n    return newState;\n})","import ACTION_TYPES from '../actionCreators/actionTypes';\n\n\n\nconst handleState = new Map([\n    [\n        { type: ACTION_TYPES.INDEX_TITLE },\n        (state, action) => {\n            state.title = action.title;\n            return state;\n        }\n    ],\n]);\n\nlet defaultState = {\n    title:''\n}\n\nexport default ((state = defaultState, action) => {\n    let newState = JSON.parse(JSON.stringify(state)); //深拷贝 state\n    // let newState = { ...state };//深拷贝 state\n    \n    [...handleState].map(([key, func]) => {\n        if (key.type && key.type === action.type) {\n            newState = func(newState,action);\n        }\n    })\n    return newState;\n})","//reducer 合并\nimport { combineReducers } from 'redux';\nimport todoListReducers from './reducer_todo_list';\nimport titleReducers from './reducer_title';\n\nlet rootReducers = combineReducers({\n    titleReducers,\n    todoListReducers,\n})\n\n\nexport default rootReducers;","import { createStore,applyMiddleware,compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducers from '../reducers/reducer_common';\n\n\n//使用redux-thunk中间件 目的是为了 处理异步请求\n//将 异步请求 放到 anctionCreators中去处理了。\n\n/* 原理是：以前的store.dispatch(action)中：\n    action是一个对象\n    而使用了redux-thunk就让这个action变成了一个函数\n    相当于给dispatch方法升级了\n*/\n/*\n    下面这里的写法 参照：https://github.com/zalmoxisus/redux-devtools-extension\n    主要是为了使用 redux-devtools-extension这个浏览器调试插件\n*/\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({}) : compose;\nconst enhancer = composeEnhancers(applyMiddleware(thunk));\n\nconst store = createStore(\n    rootReducers,\n    enhancer\n);\nexport default store;","import React from 'react';\nimport { Input,Button,List} from 'antd';\n\n\n//UI组件-只用于页面显示，不用于逻辑处理。\nconst TodoListUI = (props =>\n    <div>\n        <div style={{ width: 400 }}>\n            <Input value={props.inputVal} onChange={props.handleInputChange} style={{ width: 300 }} placeholder=\"请输入item\" />\n            <Button onClick={props.handleBtnAdd} type=\"primary\">添加</Button>\n        </div>\n        <List\n            style={{ width: 300 }}\n            bordered\n            dataSource={props.list}\n            renderItem={(item, index) => (<List.Item onClick={() => props.handleItemDelete(index)} key={index}>{item}</List.Item>)}\n        />\n    </div>);\n\n\nexport default TodoListUI;","import React from 'react';\nimport store from './store/store'\nimport getAction from './actionCreators/getAction'\nimport TodoListUI from './todoListUI';\nimport { message } from 'antd';\n\n\n//容器组件，只用于逻辑处理\nexport default class Name extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {}\n        store.subscribe(() => {\n            this.setState(store.getState().todoListReducers)\n        });\n    }\n\n    handleInputChange = (e) => {\n        store.dispatch(getAction.getInputChangeAction(e.target.value));\n    }\n    handleBtnAdd = () => {\n        if (this.state.inputVal) {\n            store.dispatch(getAction.getTodoItemAddAction());\n        }\n    }\n    handleItemDelete = (index) => {\n        store.dispatch(getAction.getTodoItemDeleteAction(index));\n    }\n  \n    componentDidMount() {\n        //初始化 list 将ajax请求放到了getInitActionData中去处理了。\n        store.dispatch(getAction.getInitActionData(() => {\n            message.success('数据初始化成功');\n        }));\n    }\n\n    render() {\n        return (\n            <TodoListUI\n                {...this.state}\n                handleInputChange={this.handleInputChange}\n                handleBtnAdd={this.handleBtnAdd}\n                handleItemDelete = {this.handleItemDelete}\n            />\n        )\n    }\n\n   \n    \n\n    \n\n\n}\n\n\n","import React from 'react';\nimport { Input,Button,List} from 'antd';\n\n\n//UI组件-只用于页面显示，不用于逻辑处理。\nconst TodoListUI = (props =>\n    <div>\n        <div style={{ width: 400 }}>\n            <Input value={props.inputVal} onChange={props.handleInputChange} style={{ width: 300 }} placeholder=\"请输入item\" />\n            <Button onClick={props.handleBtnAdd} type=\"primary\">添加</Button>\n        </div>\n        <List\n            style={{ width: 300 }}\n            bordered\n            dataSource={props.list}\n            renderItem={(item, index) => (<List.Item onClick={() => props.handleItemDelete(index)} key={index}>{item}</List.Item>)}\n        />\n    </div>);\n\n\nexport default TodoListUI;","//定义Action 类型\n\nconst ACTION_TYPES = {\n    TODOLIST_VALUE_CHANGE:'TODOLIST_VALUE_CHANGE',\n    TODOLIST_TODO_ITEM_ADD:'TODOLIST_TODO_ITEM_ADD',\n    TODOLIST_TODO_ITEM_DELETE: 'TODOLIST_TODO_ITEM_DELETE',\n    INIT_ACTION_DATA: 'INIT_ACTION_DATA',//初始化list\n    GET_LIST_DATA:'GET_LIST_DATA',//通过redux-saga 触发的action\n    \n    \n    INDEX_TITLE:'INDEX_TITLE',//首页标题\n}\n\nexport default ACTION_TYPES;","import ACTION_TYPES from '../actionCreators/actionTypes';\n\n\n\nconst handleState = new Map([\n    [\n        { type: ACTION_TYPES.INIT_ACTION_DATA },\n        (state, action) => {\n            state.list = action.data.map(({ userName }) => userName);\n            return state;\n        }\n    ],\n    [\n        { type: ACTION_TYPES.TODOLIST_VALUE_CHANGE },\n        (state, action) => {\n            state.inputVal = action.value;\n            return state;\n        }\n    ],\n    [\n        { type: ACTION_TYPES.TODOLIST_TODO_ITEM_ADD },\n        (state, action) => {\n            return {\n                // ...state,\n                list: [...state.list,state.inputVal],\n                inputVal: '',\n            };\n        }\n    ],\n    [\n        { type: ACTION_TYPES.TODOLIST_TODO_ITEM_DELETE },\n        (state, action) => {\n            state.list.splice(action.index, 1);\n            return state;\n        }\n    ],\n]);\n\nconst defaultState = {\n    inputVal: '',\n    list: []\n}\n\nexport default ((state = defaultState, action) => {\n    let newState = JSON.parse(JSON.stringify(state)); //深拷贝 state\n    // let newState = { ...state };//深拷贝 state\n    \n    [...handleState].map(([key, func]) => {\n        if (key.type && key.type === action.type) {\n            newState = func(newState,action);\n        }\n    })\n    return newState;\n})","import ACTION_TYPES from '../actionCreators/actionTypes';\n\n\n\nconst handleState = new Map([\n    [\n        { type: ACTION_TYPES.INDEX_TITLE },\n        (state, action) => {\n            state.title = action.title;\n            return state;\n        }\n    ],\n]);\n\nlet defaultState = {\n    title:''\n}\n\nexport default ((state = defaultState, action) => {\n    let newState = JSON.parse(JSON.stringify(state)); //深拷贝 state\n    // let newState = { ...state };//深拷贝 state\n    \n    [...handleState].map(([key, func]) => {\n        if (key.type && key.type === action.type) {\n            newState = func(newState,action);\n        }\n    })\n    return newState;\n})","//reducer 合并\nimport { combineReducers } from 'redux';\nimport todoListReducers from './reducer_todo_list';\nimport titleReducers from './reducer_title';\n\nlet rootReducers = combineReducers({\n    titleReducers,\n    todoListReducers,\n})\n\n\nexport default rootReducers;","\n//获取Action\nimport ACTION_TYPES from './actionTypes';\n\n\nconst getAction = {\n    getInputChangeAction:((value) => {\n        return {\n            type: ACTION_TYPES.TODOLIST_VALUE_CHANGE,\n            value\n        }\n    }),\n    getTodoItemAddAction: (() => {\n        return {\n            type: ACTION_TYPES.TODOLIST_TODO_ITEM_ADD,\n        }\n    }),\n    getTodoItemDeleteAction: ((index) => {\n        return {\n            type: ACTION_TYPES.TODOLIST_TODO_ITEM_DELETE,\n            index\n        }\n    }),\n    getIndexTitleAction: ((title) => {\n        return {\n            type: ACTION_TYPES.INDEX_TITLE,\n            title\n        }\n    }),\n    initActionData: ((data) => {\n        return {\n            type: ACTION_TYPES.INIT_ACTION_DATA,\n            data\n        }\n    }),\n    getListData: (() => {\n        return {\n            type: ACTION_TYPES.GET_LIST_DATA\n        }\n    })\n\n}\n \n\nexport default getAction;","import { takeEvery, put } from 'redux-saga/effects';\nimport getAction from '../actionCreators/getAction';\nimport ACTION_TYPES from '../actionCreators/actionTypes';\nimport axios from '../../../axios/axios';\n\nfunction* getListData(action) { \n    try {\n        const res = yield axios.ajax({ url: '/user/list' });\n        const actionInit = getAction.initActionData(res.result.list);\n        yield put(actionInit);\n    } catch (e) {\n        const actionInit = getAction.initActionData([]);\n        yield put(actionInit);\n    }\n   \n}\n\nfunction* valueChange(action){\n    console.log(\"action\",action)\n}\n\n\n\nfunction* todoListSaga() {\n    //这里可以 写多个action的异步处理 后面的函数可以是generator函数 或 普通函数\n    yield takeEvery(ACTION_TYPES.GET_LIST_DATA, getListData);\n    yield takeEvery(ACTION_TYPES.TODOLIST_VALUE_CHANGE, valueChange);\n}\n\nexport default todoListSaga;","import { createStore, applyMiddleware,compose } from 'redux';\nimport rootReducers from '../reducers/reducer_common';\nimport createSagaMiddleware  from 'redux-saga';\nimport todoListSaga from '../sagas/todoListSaga';\n\nconst sagaMiddleware = createSagaMiddleware();\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({}) : compose;\nconst enhancer = composeEnhancers(applyMiddleware(sagaMiddleware));\n\nconst store = createStore(\n    rootReducers,\n    enhancer\n);\n\nsagaMiddleware.run(todoListSaga);\n\n\nexport default store;","import React from 'react';\nimport TodoListUI from './todoListUI';\nimport store from './store/store';\nimport getAction from './actionCreators/getAction';\n\nclass ReduxSagaDemo extends React.Component{\n    constructor(props) {\n        super(props);\n        // this.state = store.getState().todoListReducers;\n        store.subscribe(() => {\n            console.log(store.getState().todoListReducers)\n            this.setState(store.getState().todoListReducers)\n        });\n    }\n\n    componentDidMount() {\n        const action = getAction.getListData();\n        store.dispatch(action);\n    }\n    handleInputChange = (e) =>{\n        store.dispatch(getAction.getInputChangeAction(e.target.value));\n    }\n    handleBtnAdd = () =>{\n        if (this.state.inputVal) {\n            store.dispatch(getAction.getTodoItemAddAction());\n        }\n    }\n\n    handleItemDelete = (index) =>{\n        store.dispatch(getAction.getTodoItemDeleteAction(index));\n    }\n\n    render() {\n        return (\n            <TodoListUI\n                {...this.state}\n                handleInputChange = {this.handleInputChange}\n                handleBtnAdd = {this.handleBtnAdd}\n                handleItemDelete = {this.handleItemDelete}\n        />);\n    }\n}\n\nexport default ReduxSagaDemo;","import React from 'react';\nimport { Input,Button,List} from 'antd';\n\n\n//UI组件-只用于页面显示，不用于逻辑处理。\nconst TodoListUI = (props =>{\n    return (<div>\n        <div style={{ width: 400 }}>\n            <Input\n                value={props.inputVal}\n                onChange={props.handleInputChange}\n                style={{ width: 300 }}\n                placeholder=\"请输入item\" />\n            <Button\n                onClick={props.handleBtnAdd}\n                type=\"primary\">添加</Button>\n        </div>\n        <List\n            style={{ width: 300 }}\n            bordered\n            dataSource={props.list}\n            renderItem={(item, index) => (<List.Item onClick={() => props.handleItemDelete(index)} key={index}>{item}</List.Item>)}\n        />\n    </div>);\n\n})\n    \n\n\nexport default TodoListUI;","//定义Action 类型\n\nconst ACTION_TYPES = {\n    TODOLIST_VALUE_CHANGE:'TODOLIST_VALUE_CHANGE',//input change\n    TODOLIST_TODO_ITEM_ADD:'TODOLIST_TODO_ITEM_ADD', //add \n    TODOLIST_TODO_ITEM_DELETE: 'TODOLIST_TODO_ITEM_DELETE',//delete\n    INIT_ACTION_DATA: 'INIT_ACTION_DATA',//初始化list\n    GET_LIST_DATA:'GET_LIST_DATA',//通过redux-saga 触发的action\n    \n    \n    INDEX_TITLE:'INDEX_TITLE',//首页标题\n}\n\nexport default ACTION_TYPES;","\n//获取Action\nimport ACTION_TYPES from './actionTypes';\n\n\nconst getAction = {\n    getInputChangeAction:((value) => {\n        return {\n            type: ACTION_TYPES.TODOLIST_VALUE_CHANGE,\n            value\n        }\n    }),\n    getTodoItemAddAction: (() => {\n        return {\n            type: ACTION_TYPES.TODOLIST_TODO_ITEM_ADD,\n        }\n    }),\n    getTodoItemDeleteAction: ((index) => {\n        return {\n            type: ACTION_TYPES.TODOLIST_TODO_ITEM_DELETE,\n            index\n        }\n    }),\n    getIndexTitleAction: ((title) => {\n        return {\n            type: ACTION_TYPES.INDEX_TITLE,\n            title\n        }\n    }),\n    initActionData: ((data) => {\n        return {\n            type: ACTION_TYPES.INIT_ACTION_DATA,\n            data\n        }\n    }),\n    getListData: (() => {\n        return {\n            type: ACTION_TYPES.GET_LIST_DATA\n        }\n    })\n\n}\n \n\nexport default getAction;","import React from 'react';\nimport TodoListUI from './todoListUI';\nimport getAction from './actionCreators/getAction';\nimport { connect } from 'react-redux';\n\n\n\nclass ReduxReactTodoList extends React.Component{\n   \n    constructor(props) {\n        super(props);\n    }\n\n    // componentDidMount() {\n    //     const action = getAction.getListData();\n    //     store.dispatch(action);\n    // }\n    // handleInputChange = (e) =>{\n    //     store.dispatch(getAction.getInputChangeAction(e.target.value));\n    // }\n    addItem = () => {\n        if (this.props.inputVal) {\n            this.props.handleBtnAdd();\n        }\n    }\n\n    // handleItemDelete = (index) =>{\n    //     store.dispatch(getAction.getTodoItemDeleteAction(index));\n    // }\n\n    render() {\n        const { inputVal, list, handleInputChange, handleItemDelete} = this.props;\n        return (\n            <TodoListUI\n                inputVal = {inputVal}\n                list = {list}\n                handleInputChange = {handleInputChange}\n                handleBtnAdd = {this.addItem}\n                handleItemDelete = {handleItemDelete}\n        />);\n    }\n}\n\nconst mapStateToProps = (state)=>{\n    //这里state 里面有todoListReducers 和 titleReducers \n    //里面有todoListReducers 里面有 inputVal 和 list 直接解构赋值\n    return {\n        ...state.todoListReducers\n        // inputVal:state.todoListReducers.inputVal,\n        // list:state.todoListReducers.list,\n    }\n}\n\nconst mapDispatchToProps = (dispatch)=>{\n    return {\n        handleInputChange:(e) => {\n            dispatch(getAction.getInputChangeAction(e.target.value));\n        },\n        handleBtnAdd:()=>{\n            dispatch(getAction.getTodoItemAddAction());\n        },\n        handleItemDelete(index){\n            dispatch(getAction.getTodoItemDeleteAction(index));\n        }\n    }\n}\n\n\nexport default connect(mapStateToProps,mapDispatchToProps)(ReduxReactTodoList);\n\n","import React from 'react'\nimport { HashRouter, Route, Switch, Redirect} from 'react-router-dom'\n\nimport App from './App';\nimport Admin from './Admin';\nimport Home from './pages/home';\nimport Buttons from './pages/ui/Buttons';\nimport Modals from './pages/ui/Modals';\nimport Loadings from './pages/ui/Loadings';\nimport Notification from './pages/ui/Notification';\nimport Messages from './pages/ui/Messages';\nimport Tabpages from './pages/ui/Tabs';\nimport Gallery from './pages/ui/Gallery';\nimport Carousels from './pages/ui/Carousels';\nimport Login from './pages/form/Login';\nimport Register from './pages/form/Register';\nimport BasicTable from './pages/table/BasicTable';\nimport HightTable from './pages/table/HightTable';\nimport City from './pages/city/city';\nimport Order from './pages/order/Order';\nimport OrderDetail from './pages/order/OrderDetail';\nimport Common from './common';\n\n\n\nimport ReduxThunkDemo from './pages/redux-thunk-demo/redux-thunk-demo';\nimport ReduxSagaDemo from './pages/redux-saga-demo/redux-saga-demo';\nimport ReduxReactTodoList from './pages/redux-react-todoList/redux-react-todoList';\n\n\nexport default class ERouter extends React.Component{\n    render(){\n        return (\n            <HashRouter>\n                <App>\n                    <Switch>\n                        <Route path=\"/login\" component={Login}></Route>\n                        <Route path=\"/common\" render={() =>\n                            <Common>\n                                <Route path=\"/common/order/detail/:orderId\" component={OrderDetail}></Route>\n                            </Common>\n                        }></Route>\n                        <Route path=\"/\" render={()=>\n                            <Admin>\n                                <Switch>\n                                    <Route path=\"/home\" component={Home}></Route>\n                                    <Route path=\"/ui/buttons\" component={Buttons}></Route>\n                                    <Route path=\"/ui/modals\" component={Modals}></Route>\n                                    <Route path=\"/ui/loadings\" component={Loadings}></Route>\n                                    <Route path=\"/ui/notification\" component={Notification}></Route>\n                                    <Route path=\"/ui/messages\" component={Messages}></Route>\n                                    <Route path=\"/ui/tabs\" component={Tabpages}></Route>\n                                    <Route path=\"/ui/gallery\" component={Gallery}></Route>\n                                    <Route path=\"/ui/carousel\" component={Carousels}></Route>\n                                    <Route path=\"/form/login\" component={Login}></Route>\n                                    <Route path=\"/form/register\" component={Register}></Route>\n                                    <Route path=\"/table/basic\" component={BasicTable}></Route>\n                                    <Route path=\"/table/hight\" component={HightTable}></Route>\n                                    <Route path=\"/city\" component={City}></Route>\n                                    <Route path=\"/order\" component={Order}></Route>\n\n                                    \n\n\n                                    <Route path=\"/redux/thunk\" component={ReduxThunkDemo}></Route>\n                                    <Route path=\"/redux/saga\" component={ReduxSagaDemo}></Route>\n                                    <Route path=\"/redux/react/todolist\" component={ReduxReactTodoList}></Route>\n\n                                    \n                                    <Redirect to=\"/home\" />\n                                </Switch>\n                            </Admin>\n                        }></Route>\n                    </Switch>\n                </App>\n            </HashRouter>\n        );\n    }\n}","import ACTION_TYPES from '../actionCreators/actionTypes';\n\n\n\nconst handleState = new Map([\n    [\n        { type: ACTION_TYPES.INIT_ACTION_DATA },\n        (state, action) => {\n            state.list = action.data.map(({ userName }) => userName);\n            return state;\n        }\n    ],\n    [\n        { type: ACTION_TYPES.TODOLIST_VALUE_CHANGE },\n        (state, action) => {\n            state.inputVal = action.value;\n            return state;\n        }\n    ],\n    [\n        { type: ACTION_TYPES.TODOLIST_TODO_ITEM_ADD },\n        (state, action) => {\n            return {\n                // ...state,\n                list: [...state.list,state.inputVal],\n                inputVal: '',\n            };\n        }\n    ],\n    [\n        { type: ACTION_TYPES.TODOLIST_TODO_ITEM_DELETE },\n        (state, action) => {\n            state.list.splice(action.index, 1);\n            return state;\n        }\n    ],\n]);\n\nconst defaultState = {\n    inputVal: '',\n    list: []\n}\n\nexport default ((state = defaultState, action) => {\n    let newState = JSON.parse(JSON.stringify(state)); //深拷贝 state\n    // let newState = { ...state };//深拷贝 state 导致todolist 删除了视图未更新\n    \n    [...handleState].map(([key, func]) => {\n        if (key.type && key.type === action.type) {\n            newState = func(newState,action);\n        }\n    })\n    return newState;\n})","import ACTION_TYPES from '../actionCreators/actionTypes';\n\n\n\nconst handleState = new Map([\n    [\n        { type: ACTION_TYPES.INDEX_TITLE },\n        (state, action) => {\n            state.title = action.title;\n            return state;\n        }\n    ],\n]);\n\nlet defaultState = {\n    title:''\n}\n\nexport default ((state = defaultState, action) => {\n    let newState = JSON.parse(JSON.stringify(state)); //深拷贝 state\n    // let newState = { ...state };//深拷贝 state\n    \n    [...handleState].map(([key, func]) => {\n        if (key.type && key.type === action.type) {\n            newState = func(newState,action);\n        }\n    })\n    return newState;\n})","//reducer 合并\nimport { combineReducers } from 'redux';\nimport todoListReducers from './reducer_todo_list';\nimport titleReducers from './reducer_title';\n\nlet rootReducers = combineReducers({\n    titleReducers,\n    todoListReducers,\n})\n\n\nexport default rootReducers;","import { createStore,applyMiddleware, compose } from 'redux';\nimport rootReducers from '../reducers/reducer_common';\n\n\n// const sagaMiddleware = createSagaMiddleware();\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({}) : compose;\nconst enhancer = composeEnhancers(applyMiddleware());\n\n\n\nconst store = createStore(rootReducers,enhancer);\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport ERouter from './router';\nimport { Provider } from 'react-redux';\nimport store from './pages/redux-react-todoList/store/store';\n\nReactDOM.render(\n    <Provider\n        store = {store}\n    >\n        <ERouter />\n    </Provider>, \n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}